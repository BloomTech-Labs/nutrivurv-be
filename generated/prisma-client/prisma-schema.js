module.exports = {
  // Code generated by Prisma (prisma@1.34.10). DO NOT EDIT.
  typeDefs:
    // Please don't change this file manually but run `prisma generate` to update it.
    // For more information, please read the docs: https://www.prisma.io/docs/prisma-client/

    /* GraphQL */ `
      type AggregateComment {
        count: Int!
      }

      type AggregateCustomIngredient {
        count: Int!
      }

      type AggregateCustomRecipe {
        count: Int!
      }

      type AggregateDailyRecord {
        count: Int!
      }

      type AggregateFavoriteFood {
        count: Int!
      }

      type AggregateIngredientList {
        count: Int!
      }

      type AggregatePost {
        count: Int!
      }

      type AggregateProfile {
        count: Int!
      }

      type AggregateUser {
        count: Int!
      }

      type AggregateWeightLog {
        count: Int!
      }

      type BatchPayload {
        count: Long!
      }

      type Comment {
        id: ID!
        user: User!
        user_id: String!
        post: Post!
        post_id: String!
        likeCount: Int
        body: String!
        updatedAt: DateTime!
        createdAt: DateTime!
      }

      type CommentConnection {
        pageInfo: PageInfo!
        edges: [CommentEdge]!
        aggregate: AggregateComment!
      }

      input CommentCreateInput {
        id: ID
        user: UserCreateOneWithoutCommentsInput!
        user_id: String!
        post: PostCreateOneWithoutCommentsInput!
        post_id: String!
        likeCount: Int
        body: String!
      }

      input CommentCreateManyWithoutPostInput {
        create: [CommentCreateWithoutPostInput!]
        connect: [CommentWhereUniqueInput!]
      }

      input CommentCreateManyWithoutUserInput {
        create: [CommentCreateWithoutUserInput!]
        connect: [CommentWhereUniqueInput!]
      }

      input CommentCreateWithoutPostInput {
        id: ID
        user: UserCreateOneWithoutCommentsInput!
        user_id: String!
        post_id: String!
        likeCount: Int
        body: String!
      }

      input CommentCreateWithoutUserInput {
        id: ID
        user_id: String!
        post: PostCreateOneWithoutCommentsInput!
        post_id: String!
        likeCount: Int
        body: String!
      }

      type CommentEdge {
        node: Comment!
        cursor: String!
      }

      enum CommentOrderByInput {
        id_ASC
        id_DESC
        user_id_ASC
        user_id_DESC
        post_id_ASC
        post_id_DESC
        likeCount_ASC
        likeCount_DESC
        body_ASC
        body_DESC
        updatedAt_ASC
        updatedAt_DESC
        createdAt_ASC
        createdAt_DESC
      }

      type CommentPreviousValues {
        id: ID!
        user_id: String!
        post_id: String!
        likeCount: Int
        body: String!
        updatedAt: DateTime!
        createdAt: DateTime!
      }

      input CommentScalarWhereInput {
        id: ID
        id_not: ID
        id_in: [ID!]
        id_not_in: [ID!]
        id_lt: ID
        id_lte: ID
        id_gt: ID
        id_gte: ID
        id_contains: ID
        id_not_contains: ID
        id_starts_with: ID
        id_not_starts_with: ID
        id_ends_with: ID
        id_not_ends_with: ID
        user_id: String
        user_id_not: String
        user_id_in: [String!]
        user_id_not_in: [String!]
        user_id_lt: String
        user_id_lte: String
        user_id_gt: String
        user_id_gte: String
        user_id_contains: String
        user_id_not_contains: String
        user_id_starts_with: String
        user_id_not_starts_with: String
        user_id_ends_with: String
        user_id_not_ends_with: String
        post_id: String
        post_id_not: String
        post_id_in: [String!]
        post_id_not_in: [String!]
        post_id_lt: String
        post_id_lte: String
        post_id_gt: String
        post_id_gte: String
        post_id_contains: String
        post_id_not_contains: String
        post_id_starts_with: String
        post_id_not_starts_with: String
        post_id_ends_with: String
        post_id_not_ends_with: String
        likeCount: Int
        likeCount_not: Int
        likeCount_in: [Int!]
        likeCount_not_in: [Int!]
        likeCount_lt: Int
        likeCount_lte: Int
        likeCount_gt: Int
        likeCount_gte: Int
        body: String
        body_not: String
        body_in: [String!]
        body_not_in: [String!]
        body_lt: String
        body_lte: String
        body_gt: String
        body_gte: String
        body_contains: String
        body_not_contains: String
        body_starts_with: String
        body_not_starts_with: String
        body_ends_with: String
        body_not_ends_with: String
        updatedAt: DateTime
        updatedAt_not: DateTime
        updatedAt_in: [DateTime!]
        updatedAt_not_in: [DateTime!]
        updatedAt_lt: DateTime
        updatedAt_lte: DateTime
        updatedAt_gt: DateTime
        updatedAt_gte: DateTime
        createdAt: DateTime
        createdAt_not: DateTime
        createdAt_in: [DateTime!]
        createdAt_not_in: [DateTime!]
        createdAt_lt: DateTime
        createdAt_lte: DateTime
        createdAt_gt: DateTime
        createdAt_gte: DateTime
        AND: [CommentScalarWhereInput!]
        OR: [CommentScalarWhereInput!]
        NOT: [CommentScalarWhereInput!]
      }

      type CommentSubscriptionPayload {
        mutation: MutationType!
        node: Comment
        updatedFields: [String!]
        previousValues: CommentPreviousValues
      }

      input CommentSubscriptionWhereInput {
        mutation_in: [MutationType!]
        updatedFields_contains: String
        updatedFields_contains_every: [String!]
        updatedFields_contains_some: [String!]
        node: CommentWhereInput
        AND: [CommentSubscriptionWhereInput!]
        OR: [CommentSubscriptionWhereInput!]
        NOT: [CommentSubscriptionWhereInput!]
      }

      input CommentUpdateInput {
        user: UserUpdateOneRequiredWithoutCommentsInput
        user_id: String
        post: PostUpdateOneRequiredWithoutCommentsInput
        post_id: String
        likeCount: Int
        body: String
      }

      input CommentUpdateManyDataInput {
        user_id: String
        post_id: String
        likeCount: Int
        body: String
      }

      input CommentUpdateManyMutationInput {
        user_id: String
        post_id: String
        likeCount: Int
        body: String
      }

      input CommentUpdateManyWithoutPostInput {
        create: [CommentCreateWithoutPostInput!]
        delete: [CommentWhereUniqueInput!]
        connect: [CommentWhereUniqueInput!]
        set: [CommentWhereUniqueInput!]
        disconnect: [CommentWhereUniqueInput!]
        update: [CommentUpdateWithWhereUniqueWithoutPostInput!]
        upsert: [CommentUpsertWithWhereUniqueWithoutPostInput!]
        deleteMany: [CommentScalarWhereInput!]
        updateMany: [CommentUpdateManyWithWhereNestedInput!]
      }

      input CommentUpdateManyWithoutUserInput {
        create: [CommentCreateWithoutUserInput!]
        delete: [CommentWhereUniqueInput!]
        connect: [CommentWhereUniqueInput!]
        set: [CommentWhereUniqueInput!]
        disconnect: [CommentWhereUniqueInput!]
        update: [CommentUpdateWithWhereUniqueWithoutUserInput!]
        upsert: [CommentUpsertWithWhereUniqueWithoutUserInput!]
        deleteMany: [CommentScalarWhereInput!]
        updateMany: [CommentUpdateManyWithWhereNestedInput!]
      }

      input CommentUpdateManyWithWhereNestedInput {
        where: CommentScalarWhereInput!
        data: CommentUpdateManyDataInput!
      }

      input CommentUpdateWithoutPostDataInput {
        user: UserUpdateOneRequiredWithoutCommentsInput
        user_id: String
        post_id: String
        likeCount: Int
        body: String
      }

      input CommentUpdateWithoutUserDataInput {
        user_id: String
        post: PostUpdateOneRequiredWithoutCommentsInput
        post_id: String
        likeCount: Int
        body: String
      }

      input CommentUpdateWithWhereUniqueWithoutPostInput {
        where: CommentWhereUniqueInput!
        data: CommentUpdateWithoutPostDataInput!
      }

      input CommentUpdateWithWhereUniqueWithoutUserInput {
        where: CommentWhereUniqueInput!
        data: CommentUpdateWithoutUserDataInput!
      }

      input CommentUpsertWithWhereUniqueWithoutPostInput {
        where: CommentWhereUniqueInput!
        update: CommentUpdateWithoutPostDataInput!
        create: CommentCreateWithoutPostInput!
      }

      input CommentUpsertWithWhereUniqueWithoutUserInput {
        where: CommentWhereUniqueInput!
        update: CommentUpdateWithoutUserDataInput!
        create: CommentCreateWithoutUserInput!
      }

      input CommentWhereInput {
        id: ID
        id_not: ID
        id_in: [ID!]
        id_not_in: [ID!]
        id_lt: ID
        id_lte: ID
        id_gt: ID
        id_gte: ID
        id_contains: ID
        id_not_contains: ID
        id_starts_with: ID
        id_not_starts_with: ID
        id_ends_with: ID
        id_not_ends_with: ID
        user: UserWhereInput
        user_id: String
        user_id_not: String
        user_id_in: [String!]
        user_id_not_in: [String!]
        user_id_lt: String
        user_id_lte: String
        user_id_gt: String
        user_id_gte: String
        user_id_contains: String
        user_id_not_contains: String
        user_id_starts_with: String
        user_id_not_starts_with: String
        user_id_ends_with: String
        user_id_not_ends_with: String
        post: PostWhereInput
        post_id: String
        post_id_not: String
        post_id_in: [String!]
        post_id_not_in: [String!]
        post_id_lt: String
        post_id_lte: String
        post_id_gt: String
        post_id_gte: String
        post_id_contains: String
        post_id_not_contains: String
        post_id_starts_with: String
        post_id_not_starts_with: String
        post_id_ends_with: String
        post_id_not_ends_with: String
        likeCount: Int
        likeCount_not: Int
        likeCount_in: [Int!]
        likeCount_not_in: [Int!]
        likeCount_lt: Int
        likeCount_lte: Int
        likeCount_gt: Int
        likeCount_gte: Int
        body: String
        body_not: String
        body_in: [String!]
        body_not_in: [String!]
        body_lt: String
        body_lte: String
        body_gt: String
        body_gte: String
        body_contains: String
        body_not_contains: String
        body_starts_with: String
        body_not_starts_with: String
        body_ends_with: String
        body_not_ends_with: String
        updatedAt: DateTime
        updatedAt_not: DateTime
        updatedAt_in: [DateTime!]
        updatedAt_not_in: [DateTime!]
        updatedAt_lt: DateTime
        updatedAt_lte: DateTime
        updatedAt_gt: DateTime
        updatedAt_gte: DateTime
        createdAt: DateTime
        createdAt_not: DateTime
        createdAt_in: [DateTime!]
        createdAt_not_in: [DateTime!]
        createdAt_lt: DateTime
        createdAt_lte: DateTime
        createdAt_gt: DateTime
        createdAt_gte: DateTime
        AND: [CommentWhereInput!]
        OR: [CommentWhereInput!]
        NOT: [CommentWhereInput!]
      }

      input CommentWhereUniqueInput {
        id: ID
      }

      type CustomIngredient {
        id: ID!
        user_id: String!
        name: String!
        description: String!
        fat: Int!
        carbs: Int!
        protein: Int!
        fiber: Int!
        calories: Int!
        user: User!
        updatedAt: DateTime!
        createdAt: DateTime!
      }

      type CustomIngredientConnection {
        pageInfo: PageInfo!
        edges: [CustomIngredientEdge]!
        aggregate: AggregateCustomIngredient!
      }

      input CustomIngredientCreateInput {
        id: ID
        user_id: String!
        name: String!
        description: String!
        fat: Int!
        carbs: Int!
        protein: Int!
        fiber: Int!
        calories: Int!
        user: UserCreateOneWithoutCustom_ingredientsInput!
      }

      input CustomIngredientCreateManyWithoutUserInput {
        create: [CustomIngredientCreateWithoutUserInput!]
        connect: [CustomIngredientWhereUniqueInput!]
      }

      input CustomIngredientCreateWithoutUserInput {
        id: ID
        user_id: String!
        name: String!
        description: String!
        fat: Int!
        carbs: Int!
        protein: Int!
        fiber: Int!
        calories: Int!
      }

      type CustomIngredientEdge {
        node: CustomIngredient!
        cursor: String!
      }

      enum CustomIngredientOrderByInput {
        id_ASC
        id_DESC
        user_id_ASC
        user_id_DESC
        name_ASC
        name_DESC
        description_ASC
        description_DESC
        fat_ASC
        fat_DESC
        carbs_ASC
        carbs_DESC
        protein_ASC
        protein_DESC
        fiber_ASC
        fiber_DESC
        calories_ASC
        calories_DESC
        updatedAt_ASC
        updatedAt_DESC
        createdAt_ASC
        createdAt_DESC
      }

      type CustomIngredientPreviousValues {
        id: ID!
        user_id: String!
        name: String!
        description: String!
        fat: Int!
        carbs: Int!
        protein: Int!
        fiber: Int!
        calories: Int!
        updatedAt: DateTime!
        createdAt: DateTime!
      }

      input CustomIngredientScalarWhereInput {
        id: ID
        id_not: ID
        id_in: [ID!]
        id_not_in: [ID!]
        id_lt: ID
        id_lte: ID
        id_gt: ID
        id_gte: ID
        id_contains: ID
        id_not_contains: ID
        id_starts_with: ID
        id_not_starts_with: ID
        id_ends_with: ID
        id_not_ends_with: ID
        user_id: String
        user_id_not: String
        user_id_in: [String!]
        user_id_not_in: [String!]
        user_id_lt: String
        user_id_lte: String
        user_id_gt: String
        user_id_gte: String
        user_id_contains: String
        user_id_not_contains: String
        user_id_starts_with: String
        user_id_not_starts_with: String
        user_id_ends_with: String
        user_id_not_ends_with: String
        name: String
        name_not: String
        name_in: [String!]
        name_not_in: [String!]
        name_lt: String
        name_lte: String
        name_gt: String
        name_gte: String
        name_contains: String
        name_not_contains: String
        name_starts_with: String
        name_not_starts_with: String
        name_ends_with: String
        name_not_ends_with: String
        description: String
        description_not: String
        description_in: [String!]
        description_not_in: [String!]
        description_lt: String
        description_lte: String
        description_gt: String
        description_gte: String
        description_contains: String
        description_not_contains: String
        description_starts_with: String
        description_not_starts_with: String
        description_ends_with: String
        description_not_ends_with: String
        fat: Int
        fat_not: Int
        fat_in: [Int!]
        fat_not_in: [Int!]
        fat_lt: Int
        fat_lte: Int
        fat_gt: Int
        fat_gte: Int
        carbs: Int
        carbs_not: Int
        carbs_in: [Int!]
        carbs_not_in: [Int!]
        carbs_lt: Int
        carbs_lte: Int
        carbs_gt: Int
        carbs_gte: Int
        protein: Int
        protein_not: Int
        protein_in: [Int!]
        protein_not_in: [Int!]
        protein_lt: Int
        protein_lte: Int
        protein_gt: Int
        protein_gte: Int
        fiber: Int
        fiber_not: Int
        fiber_in: [Int!]
        fiber_not_in: [Int!]
        fiber_lt: Int
        fiber_lte: Int
        fiber_gt: Int
        fiber_gte: Int
        calories: Int
        calories_not: Int
        calories_in: [Int!]
        calories_not_in: [Int!]
        calories_lt: Int
        calories_lte: Int
        calories_gt: Int
        calories_gte: Int
        updatedAt: DateTime
        updatedAt_not: DateTime
        updatedAt_in: [DateTime!]
        updatedAt_not_in: [DateTime!]
        updatedAt_lt: DateTime
        updatedAt_lte: DateTime
        updatedAt_gt: DateTime
        updatedAt_gte: DateTime
        createdAt: DateTime
        createdAt_not: DateTime
        createdAt_in: [DateTime!]
        createdAt_not_in: [DateTime!]
        createdAt_lt: DateTime
        createdAt_lte: DateTime
        createdAt_gt: DateTime
        createdAt_gte: DateTime
        AND: [CustomIngredientScalarWhereInput!]
        OR: [CustomIngredientScalarWhereInput!]
        NOT: [CustomIngredientScalarWhereInput!]
      }

      type CustomIngredientSubscriptionPayload {
        mutation: MutationType!
        node: CustomIngredient
        updatedFields: [String!]
        previousValues: CustomIngredientPreviousValues
      }

      input CustomIngredientSubscriptionWhereInput {
        mutation_in: [MutationType!]
        updatedFields_contains: String
        updatedFields_contains_every: [String!]
        updatedFields_contains_some: [String!]
        node: CustomIngredientWhereInput
        AND: [CustomIngredientSubscriptionWhereInput!]
        OR: [CustomIngredientSubscriptionWhereInput!]
        NOT: [CustomIngredientSubscriptionWhereInput!]
      }

      input CustomIngredientUpdateInput {
        user_id: String
        name: String
        description: String
        fat: Int
        carbs: Int
        protein: Int
        fiber: Int
        calories: Int
        user: UserUpdateOneRequiredWithoutCustom_ingredientsInput
      }

      input CustomIngredientUpdateManyDataInput {
        user_id: String
        name: String
        description: String
        fat: Int
        carbs: Int
        protein: Int
        fiber: Int
        calories: Int
      }

      input CustomIngredientUpdateManyMutationInput {
        user_id: String
        name: String
        description: String
        fat: Int
        carbs: Int
        protein: Int
        fiber: Int
        calories: Int
      }

      input CustomIngredientUpdateManyWithoutUserInput {
        create: [CustomIngredientCreateWithoutUserInput!]
        delete: [CustomIngredientWhereUniqueInput!]
        connect: [CustomIngredientWhereUniqueInput!]
        set: [CustomIngredientWhereUniqueInput!]
        disconnect: [CustomIngredientWhereUniqueInput!]
        update: [CustomIngredientUpdateWithWhereUniqueWithoutUserInput!]
        upsert: [CustomIngredientUpsertWithWhereUniqueWithoutUserInput!]
        deleteMany: [CustomIngredientScalarWhereInput!]
        updateMany: [CustomIngredientUpdateManyWithWhereNestedInput!]
      }

      input CustomIngredientUpdateManyWithWhereNestedInput {
        where: CustomIngredientScalarWhereInput!
        data: CustomIngredientUpdateManyDataInput!
      }

      input CustomIngredientUpdateWithoutUserDataInput {
        user_id: String
        name: String
        description: String
        fat: Int
        carbs: Int
        protein: Int
        fiber: Int
        calories: Int
      }

      input CustomIngredientUpdateWithWhereUniqueWithoutUserInput {
        where: CustomIngredientWhereUniqueInput!
        data: CustomIngredientUpdateWithoutUserDataInput!
      }

      input CustomIngredientUpsertWithWhereUniqueWithoutUserInput {
        where: CustomIngredientWhereUniqueInput!
        update: CustomIngredientUpdateWithoutUserDataInput!
        create: CustomIngredientCreateWithoutUserInput!
      }

      input CustomIngredientWhereInput {
        id: ID
        id_not: ID
        id_in: [ID!]
        id_not_in: [ID!]
        id_lt: ID
        id_lte: ID
        id_gt: ID
        id_gte: ID
        id_contains: ID
        id_not_contains: ID
        id_starts_with: ID
        id_not_starts_with: ID
        id_ends_with: ID
        id_not_ends_with: ID
        user_id: String
        user_id_not: String
        user_id_in: [String!]
        user_id_not_in: [String!]
        user_id_lt: String
        user_id_lte: String
        user_id_gt: String
        user_id_gte: String
        user_id_contains: String
        user_id_not_contains: String
        user_id_starts_with: String
        user_id_not_starts_with: String
        user_id_ends_with: String
        user_id_not_ends_with: String
        name: String
        name_not: String
        name_in: [String!]
        name_not_in: [String!]
        name_lt: String
        name_lte: String
        name_gt: String
        name_gte: String
        name_contains: String
        name_not_contains: String
        name_starts_with: String
        name_not_starts_with: String
        name_ends_with: String
        name_not_ends_with: String
        description: String
        description_not: String
        description_in: [String!]
        description_not_in: [String!]
        description_lt: String
        description_lte: String
        description_gt: String
        description_gte: String
        description_contains: String
        description_not_contains: String
        description_starts_with: String
        description_not_starts_with: String
        description_ends_with: String
        description_not_ends_with: String
        fat: Int
        fat_not: Int
        fat_in: [Int!]
        fat_not_in: [Int!]
        fat_lt: Int
        fat_lte: Int
        fat_gt: Int
        fat_gte: Int
        carbs: Int
        carbs_not: Int
        carbs_in: [Int!]
        carbs_not_in: [Int!]
        carbs_lt: Int
        carbs_lte: Int
        carbs_gt: Int
        carbs_gte: Int
        protein: Int
        protein_not: Int
        protein_in: [Int!]
        protein_not_in: [Int!]
        protein_lt: Int
        protein_lte: Int
        protein_gt: Int
        protein_gte: Int
        fiber: Int
        fiber_not: Int
        fiber_in: [Int!]
        fiber_not_in: [Int!]
        fiber_lt: Int
        fiber_lte: Int
        fiber_gt: Int
        fiber_gte: Int
        calories: Int
        calories_not: Int
        calories_in: [Int!]
        calories_not_in: [Int!]
        calories_lt: Int
        calories_lte: Int
        calories_gt: Int
        calories_gte: Int
        user: UserWhereInput
        updatedAt: DateTime
        updatedAt_not: DateTime
        updatedAt_in: [DateTime!]
        updatedAt_not_in: [DateTime!]
        updatedAt_lt: DateTime
        updatedAt_lte: DateTime
        updatedAt_gt: DateTime
        updatedAt_gte: DateTime
        createdAt: DateTime
        createdAt_not: DateTime
        createdAt_in: [DateTime!]
        createdAt_not_in: [DateTime!]
        createdAt_lt: DateTime
        createdAt_lte: DateTime
        createdAt_gt: DateTime
        createdAt_gte: DateTime
        AND: [CustomIngredientWhereInput!]
        OR: [CustomIngredientWhereInput!]
        NOT: [CustomIngredientWhereInput!]
      }

      input CustomIngredientWhereUniqueInput {
        id: ID
      }

      type CustomRecipe {
        id: ID!
        name: String!
        user_id: String!
        portions: Int!
        user: User!
        ingredient_list(
          where: IngredientListWhereInput
          orderBy: IngredientListOrderByInput
          skip: Int
          after: String
          before: String
          first: Int
          last: Int
        ): [IngredientList!]
        updatedAt: DateTime!
        createdAt: DateTime!
      }

      type CustomRecipeConnection {
        pageInfo: PageInfo!
        edges: [CustomRecipeEdge]!
        aggregate: AggregateCustomRecipe!
      }

      input CustomRecipeCreateInput {
        id: ID
        name: String!
        user_id: String!
        portions: Int!
        user: UserCreateOneWithoutCustom_recipesInput!
        ingredient_list: IngredientListCreateManyWithoutRecipeInput
      }

      input CustomRecipeCreateManyWithoutUserInput {
        create: [CustomRecipeCreateWithoutUserInput!]
        connect: [CustomRecipeWhereUniqueInput!]
      }

      input CustomRecipeCreateOneWithoutIngredient_listInput {
        create: CustomRecipeCreateWithoutIngredient_listInput
        connect: CustomRecipeWhereUniqueInput
      }

      input CustomRecipeCreateWithoutIngredient_listInput {
        id: ID
        name: String!
        user_id: String!
        portions: Int!
        user: UserCreateOneWithoutCustom_recipesInput!
      }

      input CustomRecipeCreateWithoutUserInput {
        id: ID
        name: String!
        user_id: String!
        portions: Int!
        ingredient_list: IngredientListCreateManyWithoutRecipeInput
      }

      type CustomRecipeEdge {
        node: CustomRecipe!
        cursor: String!
      }

      enum CustomRecipeOrderByInput {
        id_ASC
        id_DESC
        name_ASC
        name_DESC
        user_id_ASC
        user_id_DESC
        portions_ASC
        portions_DESC
        updatedAt_ASC
        updatedAt_DESC
        createdAt_ASC
        createdAt_DESC
      }

      type CustomRecipePreviousValues {
        id: ID!
        name: String!
        user_id: String!
        portions: Int!
        updatedAt: DateTime!
        createdAt: DateTime!
      }

      input CustomRecipeScalarWhereInput {
        id: ID
        id_not: ID
        id_in: [ID!]
        id_not_in: [ID!]
        id_lt: ID
        id_lte: ID
        id_gt: ID
        id_gte: ID
        id_contains: ID
        id_not_contains: ID
        id_starts_with: ID
        id_not_starts_with: ID
        id_ends_with: ID
        id_not_ends_with: ID
        name: String
        name_not: String
        name_in: [String!]
        name_not_in: [String!]
        name_lt: String
        name_lte: String
        name_gt: String
        name_gte: String
        name_contains: String
        name_not_contains: String
        name_starts_with: String
        name_not_starts_with: String
        name_ends_with: String
        name_not_ends_with: String
        user_id: String
        user_id_not: String
        user_id_in: [String!]
        user_id_not_in: [String!]
        user_id_lt: String
        user_id_lte: String
        user_id_gt: String
        user_id_gte: String
        user_id_contains: String
        user_id_not_contains: String
        user_id_starts_with: String
        user_id_not_starts_with: String
        user_id_ends_with: String
        user_id_not_ends_with: String
        portions: Int
        portions_not: Int
        portions_in: [Int!]
        portions_not_in: [Int!]
        portions_lt: Int
        portions_lte: Int
        portions_gt: Int
        portions_gte: Int
        updatedAt: DateTime
        updatedAt_not: DateTime
        updatedAt_in: [DateTime!]
        updatedAt_not_in: [DateTime!]
        updatedAt_lt: DateTime
        updatedAt_lte: DateTime
        updatedAt_gt: DateTime
        updatedAt_gte: DateTime
        createdAt: DateTime
        createdAt_not: DateTime
        createdAt_in: [DateTime!]
        createdAt_not_in: [DateTime!]
        createdAt_lt: DateTime
        createdAt_lte: DateTime
        createdAt_gt: DateTime
        createdAt_gte: DateTime
        AND: [CustomRecipeScalarWhereInput!]
        OR: [CustomRecipeScalarWhereInput!]
        NOT: [CustomRecipeScalarWhereInput!]
      }

      type CustomRecipeSubscriptionPayload {
        mutation: MutationType!
        node: CustomRecipe
        updatedFields: [String!]
        previousValues: CustomRecipePreviousValues
      }

      input CustomRecipeSubscriptionWhereInput {
        mutation_in: [MutationType!]
        updatedFields_contains: String
        updatedFields_contains_every: [String!]
        updatedFields_contains_some: [String!]
        node: CustomRecipeWhereInput
        AND: [CustomRecipeSubscriptionWhereInput!]
        OR: [CustomRecipeSubscriptionWhereInput!]
        NOT: [CustomRecipeSubscriptionWhereInput!]
      }

      input CustomRecipeUpdateInput {
        name: String
        user_id: String
        portions: Int
        user: UserUpdateOneRequiredWithoutCustom_recipesInput
        ingredient_list: IngredientListUpdateManyWithoutRecipeInput
      }

      input CustomRecipeUpdateManyDataInput {
        name: String
        user_id: String
        portions: Int
      }

      input CustomRecipeUpdateManyMutationInput {
        name: String
        user_id: String
        portions: Int
      }

      input CustomRecipeUpdateManyWithoutUserInput {
        create: [CustomRecipeCreateWithoutUserInput!]
        delete: [CustomRecipeWhereUniqueInput!]
        connect: [CustomRecipeWhereUniqueInput!]
        set: [CustomRecipeWhereUniqueInput!]
        disconnect: [CustomRecipeWhereUniqueInput!]
        update: [CustomRecipeUpdateWithWhereUniqueWithoutUserInput!]
        upsert: [CustomRecipeUpsertWithWhereUniqueWithoutUserInput!]
        deleteMany: [CustomRecipeScalarWhereInput!]
        updateMany: [CustomRecipeUpdateManyWithWhereNestedInput!]
      }

      input CustomRecipeUpdateManyWithWhereNestedInput {
        where: CustomRecipeScalarWhereInput!
        data: CustomRecipeUpdateManyDataInput!
      }

      input CustomRecipeUpdateOneRequiredWithoutIngredient_listInput {
        create: CustomRecipeCreateWithoutIngredient_listInput
        update: CustomRecipeUpdateWithoutIngredient_listDataInput
        upsert: CustomRecipeUpsertWithoutIngredient_listInput
        connect: CustomRecipeWhereUniqueInput
      }

      input CustomRecipeUpdateWithoutIngredient_listDataInput {
        name: String
        user_id: String
        portions: Int
        user: UserUpdateOneRequiredWithoutCustom_recipesInput
      }

      input CustomRecipeUpdateWithoutUserDataInput {
        name: String
        user_id: String
        portions: Int
        ingredient_list: IngredientListUpdateManyWithoutRecipeInput
      }

      input CustomRecipeUpdateWithWhereUniqueWithoutUserInput {
        where: CustomRecipeWhereUniqueInput!
        data: CustomRecipeUpdateWithoutUserDataInput!
      }

      input CustomRecipeUpsertWithoutIngredient_listInput {
        update: CustomRecipeUpdateWithoutIngredient_listDataInput!
        create: CustomRecipeCreateWithoutIngredient_listInput!
      }

      input CustomRecipeUpsertWithWhereUniqueWithoutUserInput {
        where: CustomRecipeWhereUniqueInput!
        update: CustomRecipeUpdateWithoutUserDataInput!
        create: CustomRecipeCreateWithoutUserInput!
      }

      input CustomRecipeWhereInput {
        id: ID
        id_not: ID
        id_in: [ID!]
        id_not_in: [ID!]
        id_lt: ID
        id_lte: ID
        id_gt: ID
        id_gte: ID
        id_contains: ID
        id_not_contains: ID
        id_starts_with: ID
        id_not_starts_with: ID
        id_ends_with: ID
        id_not_ends_with: ID
        name: String
        name_not: String
        name_in: [String!]
        name_not_in: [String!]
        name_lt: String
        name_lte: String
        name_gt: String
        name_gte: String
        name_contains: String
        name_not_contains: String
        name_starts_with: String
        name_not_starts_with: String
        name_ends_with: String
        name_not_ends_with: String
        user_id: String
        user_id_not: String
        user_id_in: [String!]
        user_id_not_in: [String!]
        user_id_lt: String
        user_id_lte: String
        user_id_gt: String
        user_id_gte: String
        user_id_contains: String
        user_id_not_contains: String
        user_id_starts_with: String
        user_id_not_starts_with: String
        user_id_ends_with: String
        user_id_not_ends_with: String
        portions: Int
        portions_not: Int
        portions_in: [Int!]
        portions_not_in: [Int!]
        portions_lt: Int
        portions_lte: Int
        portions_gt: Int
        portions_gte: Int
        user: UserWhereInput
        ingredient_list_every: IngredientListWhereInput
        ingredient_list_some: IngredientListWhereInput
        ingredient_list_none: IngredientListWhereInput
        updatedAt: DateTime
        updatedAt_not: DateTime
        updatedAt_in: [DateTime!]
        updatedAt_not_in: [DateTime!]
        updatedAt_lt: DateTime
        updatedAt_lte: DateTime
        updatedAt_gt: DateTime
        updatedAt_gte: DateTime
        createdAt: DateTime
        createdAt_not: DateTime
        createdAt_in: [DateTime!]
        createdAt_not_in: [DateTime!]
        createdAt_lt: DateTime
        createdAt_lte: DateTime
        createdAt_gt: DateTime
        createdAt_gte: DateTime
        AND: [CustomRecipeWhereInput!]
        OR: [CustomRecipeWhereInput!]
        NOT: [CustomRecipeWhereInput!]
      }

      input CustomRecipeWhereUniqueInput {
        id: ID
      }

      type DailyRecord {
        id: ID!
        user_id: String!
        date: String!
        calories: Int!
        fat: Int!
        carbs: Int!
        fiber: Int!
        protein: Int!
        food_string: String!
        quantity: Int!
        meal_type: String!
        user: User!
        updatedAt: DateTime!
        createdAt: DateTime!
      }

      type DailyRecordConnection {
        pageInfo: PageInfo!
        edges: [DailyRecordEdge]!
        aggregate: AggregateDailyRecord!
      }

      input DailyRecordCreateInput {
        id: ID
        user_id: String!
        date: String!
        calories: Int!
        fat: Int!
        carbs: Int!
        fiber: Int!
        protein: Int!
        food_string: String!
        quantity: Int!
        meal_type: String!
        user: UserCreateOneWithoutDaily_recordsInput!
      }

      input DailyRecordCreateManyWithoutUserInput {
        create: [DailyRecordCreateWithoutUserInput!]
        connect: [DailyRecordWhereUniqueInput!]
      }

      input DailyRecordCreateWithoutUserInput {
        id: ID
        user_id: String!
        date: String!
        calories: Int!
        fat: Int!
        carbs: Int!
        fiber: Int!
        protein: Int!
        food_string: String!
        quantity: Int!
        meal_type: String!
      }

      type DailyRecordEdge {
        node: DailyRecord!
        cursor: String!
      }

      enum DailyRecordOrderByInput {
        id_ASC
        id_DESC
        user_id_ASC
        user_id_DESC
        date_ASC
        date_DESC
        calories_ASC
        calories_DESC
        fat_ASC
        fat_DESC
        carbs_ASC
        carbs_DESC
        fiber_ASC
        fiber_DESC
        protein_ASC
        protein_DESC
        food_string_ASC
        food_string_DESC
        quantity_ASC
        quantity_DESC
        meal_type_ASC
        meal_type_DESC
        updatedAt_ASC
        updatedAt_DESC
        createdAt_ASC
        createdAt_DESC
      }

      type DailyRecordPreviousValues {
        id: ID!
        user_id: String!
        date: String!
        calories: Int!
        fat: Int!
        carbs: Int!
        fiber: Int!
        protein: Int!
        food_string: String!
        quantity: Int!
        meal_type: String!
        updatedAt: DateTime!
        createdAt: DateTime!
      }

      input DailyRecordScalarWhereInput {
        id: ID
        id_not: ID
        id_in: [ID!]
        id_not_in: [ID!]
        id_lt: ID
        id_lte: ID
        id_gt: ID
        id_gte: ID
        id_contains: ID
        id_not_contains: ID
        id_starts_with: ID
        id_not_starts_with: ID
        id_ends_with: ID
        id_not_ends_with: ID
        user_id: String
        user_id_not: String
        user_id_in: [String!]
        user_id_not_in: [String!]
        user_id_lt: String
        user_id_lte: String
        user_id_gt: String
        user_id_gte: String
        user_id_contains: String
        user_id_not_contains: String
        user_id_starts_with: String
        user_id_not_starts_with: String
        user_id_ends_with: String
        user_id_not_ends_with: String
        date: String
        date_not: String
        date_in: [String!]
        date_not_in: [String!]
        date_lt: String
        date_lte: String
        date_gt: String
        date_gte: String
        date_contains: String
        date_not_contains: String
        date_starts_with: String
        date_not_starts_with: String
        date_ends_with: String
        date_not_ends_with: String
        calories: Int
        calories_not: Int
        calories_in: [Int!]
        calories_not_in: [Int!]
        calories_lt: Int
        calories_lte: Int
        calories_gt: Int
        calories_gte: Int
        fat: Int
        fat_not: Int
        fat_in: [Int!]
        fat_not_in: [Int!]
        fat_lt: Int
        fat_lte: Int
        fat_gt: Int
        fat_gte: Int
        carbs: Int
        carbs_not: Int
        carbs_in: [Int!]
        carbs_not_in: [Int!]
        carbs_lt: Int
        carbs_lte: Int
        carbs_gt: Int
        carbs_gte: Int
        fiber: Int
        fiber_not: Int
        fiber_in: [Int!]
        fiber_not_in: [Int!]
        fiber_lt: Int
        fiber_lte: Int
        fiber_gt: Int
        fiber_gte: Int
        protein: Int
        protein_not: Int
        protein_in: [Int!]
        protein_not_in: [Int!]
        protein_lt: Int
        protein_lte: Int
        protein_gt: Int
        protein_gte: Int
        food_string: String
        food_string_not: String
        food_string_in: [String!]
        food_string_not_in: [String!]
        food_string_lt: String
        food_string_lte: String
        food_string_gt: String
        food_string_gte: String
        food_string_contains: String
        food_string_not_contains: String
        food_string_starts_with: String
        food_string_not_starts_with: String
        food_string_ends_with: String
        food_string_not_ends_with: String
        quantity: Int
        quantity_not: Int
        quantity_in: [Int!]
        quantity_not_in: [Int!]
        quantity_lt: Int
        quantity_lte: Int
        quantity_gt: Int
        quantity_gte: Int
        meal_type: String
        meal_type_not: String
        meal_type_in: [String!]
        meal_type_not_in: [String!]
        meal_type_lt: String
        meal_type_lte: String
        meal_type_gt: String
        meal_type_gte: String
        meal_type_contains: String
        meal_type_not_contains: String
        meal_type_starts_with: String
        meal_type_not_starts_with: String
        meal_type_ends_with: String
        meal_type_not_ends_with: String
        updatedAt: DateTime
        updatedAt_not: DateTime
        updatedAt_in: [DateTime!]
        updatedAt_not_in: [DateTime!]
        updatedAt_lt: DateTime
        updatedAt_lte: DateTime
        updatedAt_gt: DateTime
        updatedAt_gte: DateTime
        createdAt: DateTime
        createdAt_not: DateTime
        createdAt_in: [DateTime!]
        createdAt_not_in: [DateTime!]
        createdAt_lt: DateTime
        createdAt_lte: DateTime
        createdAt_gt: DateTime
        createdAt_gte: DateTime
        AND: [DailyRecordScalarWhereInput!]
        OR: [DailyRecordScalarWhereInput!]
        NOT: [DailyRecordScalarWhereInput!]
      }

      type DailyRecordSubscriptionPayload {
        mutation: MutationType!
        node: DailyRecord
        updatedFields: [String!]
        previousValues: DailyRecordPreviousValues
      }

      input DailyRecordSubscriptionWhereInput {
        mutation_in: [MutationType!]
        updatedFields_contains: String
        updatedFields_contains_every: [String!]
        updatedFields_contains_some: [String!]
        node: DailyRecordWhereInput
        AND: [DailyRecordSubscriptionWhereInput!]
        OR: [DailyRecordSubscriptionWhereInput!]
        NOT: [DailyRecordSubscriptionWhereInput!]
      }

      input DailyRecordUpdateInput {
        user_id: String
        date: String
        calories: Int
        fat: Int
        carbs: Int
        fiber: Int
        protein: Int
        food_string: String
        quantity: Int
        meal_type: String
        user: UserUpdateOneRequiredWithoutDaily_recordsInput
      }

      input DailyRecordUpdateManyDataInput {
        user_id: String
        date: String
        calories: Int
        fat: Int
        carbs: Int
        fiber: Int
        protein: Int
        food_string: String
        quantity: Int
        meal_type: String
      }

      input DailyRecordUpdateManyMutationInput {
        user_id: String
        date: String
        calories: Int
        fat: Int
        carbs: Int
        fiber: Int
        protein: Int
        food_string: String
        quantity: Int
        meal_type: String
      }

      input DailyRecordUpdateManyWithoutUserInput {
        create: [DailyRecordCreateWithoutUserInput!]
        delete: [DailyRecordWhereUniqueInput!]
        connect: [DailyRecordWhereUniqueInput!]
        set: [DailyRecordWhereUniqueInput!]
        disconnect: [DailyRecordWhereUniqueInput!]
        update: [DailyRecordUpdateWithWhereUniqueWithoutUserInput!]
        upsert: [DailyRecordUpsertWithWhereUniqueWithoutUserInput!]
        deleteMany: [DailyRecordScalarWhereInput!]
        updateMany: [DailyRecordUpdateManyWithWhereNestedInput!]
      }

      input DailyRecordUpdateManyWithWhereNestedInput {
        where: DailyRecordScalarWhereInput!
        data: DailyRecordUpdateManyDataInput!
      }

      input DailyRecordUpdateWithoutUserDataInput {
        user_id: String
        date: String
        calories: Int
        fat: Int
        carbs: Int
        fiber: Int
        protein: Int
        food_string: String
        quantity: Int
        meal_type: String
      }

      input DailyRecordUpdateWithWhereUniqueWithoutUserInput {
        where: DailyRecordWhereUniqueInput!
        data: DailyRecordUpdateWithoutUserDataInput!
      }

      input DailyRecordUpsertWithWhereUniqueWithoutUserInput {
        where: DailyRecordWhereUniqueInput!
        update: DailyRecordUpdateWithoutUserDataInput!
        create: DailyRecordCreateWithoutUserInput!
      }

      input DailyRecordWhereInput {
        id: ID
        id_not: ID
        id_in: [ID!]
        id_not_in: [ID!]
        id_lt: ID
        id_lte: ID
        id_gt: ID
        id_gte: ID
        id_contains: ID
        id_not_contains: ID
        id_starts_with: ID
        id_not_starts_with: ID
        id_ends_with: ID
        id_not_ends_with: ID
        user_id: String
        user_id_not: String
        user_id_in: [String!]
        user_id_not_in: [String!]
        user_id_lt: String
        user_id_lte: String
        user_id_gt: String
        user_id_gte: String
        user_id_contains: String
        user_id_not_contains: String
        user_id_starts_with: String
        user_id_not_starts_with: String
        user_id_ends_with: String
        user_id_not_ends_with: String
        date: String
        date_not: String
        date_in: [String!]
        date_not_in: [String!]
        date_lt: String
        date_lte: String
        date_gt: String
        date_gte: String
        date_contains: String
        date_not_contains: String
        date_starts_with: String
        date_not_starts_with: String
        date_ends_with: String
        date_not_ends_with: String
        calories: Int
        calories_not: Int
        calories_in: [Int!]
        calories_not_in: [Int!]
        calories_lt: Int
        calories_lte: Int
        calories_gt: Int
        calories_gte: Int
        fat: Int
        fat_not: Int
        fat_in: [Int!]
        fat_not_in: [Int!]
        fat_lt: Int
        fat_lte: Int
        fat_gt: Int
        fat_gte: Int
        carbs: Int
        carbs_not: Int
        carbs_in: [Int!]
        carbs_not_in: [Int!]
        carbs_lt: Int
        carbs_lte: Int
        carbs_gt: Int
        carbs_gte: Int
        fiber: Int
        fiber_not: Int
        fiber_in: [Int!]
        fiber_not_in: [Int!]
        fiber_lt: Int
        fiber_lte: Int
        fiber_gt: Int
        fiber_gte: Int
        protein: Int
        protein_not: Int
        protein_in: [Int!]
        protein_not_in: [Int!]
        protein_lt: Int
        protein_lte: Int
        protein_gt: Int
        protein_gte: Int
        food_string: String
        food_string_not: String
        food_string_in: [String!]
        food_string_not_in: [String!]
        food_string_lt: String
        food_string_lte: String
        food_string_gt: String
        food_string_gte: String
        food_string_contains: String
        food_string_not_contains: String
        food_string_starts_with: String
        food_string_not_starts_with: String
        food_string_ends_with: String
        food_string_not_ends_with: String
        quantity: Int
        quantity_not: Int
        quantity_in: [Int!]
        quantity_not_in: [Int!]
        quantity_lt: Int
        quantity_lte: Int
        quantity_gt: Int
        quantity_gte: Int
        meal_type: String
        meal_type_not: String
        meal_type_in: [String!]
        meal_type_not_in: [String!]
        meal_type_lt: String
        meal_type_lte: String
        meal_type_gt: String
        meal_type_gte: String
        meal_type_contains: String
        meal_type_not_contains: String
        meal_type_starts_with: String
        meal_type_not_starts_with: String
        meal_type_ends_with: String
        meal_type_not_ends_with: String
        user: UserWhereInput
        updatedAt: DateTime
        updatedAt_not: DateTime
        updatedAt_in: [DateTime!]
        updatedAt_not_in: [DateTime!]
        updatedAt_lt: DateTime
        updatedAt_lte: DateTime
        updatedAt_gt: DateTime
        updatedAt_gte: DateTime
        createdAt: DateTime
        createdAt_not: DateTime
        createdAt_in: [DateTime!]
        createdAt_not_in: [DateTime!]
        createdAt_lt: DateTime
        createdAt_lte: DateTime
        createdAt_gt: DateTime
        createdAt_gte: DateTime
        AND: [DailyRecordWhereInput!]
        OR: [DailyRecordWhereInput!]
        NOT: [DailyRecordWhereInput!]
      }

      input DailyRecordWhereUniqueInput {
        id: ID
      }

      scalar DateTime

      type FavoriteFood {
        id: ID!
        food_id: String!
        custom: Boolean!
        user_id: String!
        user: User!
        updatedAt: DateTime!
        createdAt: DateTime!
      }

      type FavoriteFoodConnection {
        pageInfo: PageInfo!
        edges: [FavoriteFoodEdge]!
        aggregate: AggregateFavoriteFood!
      }

      input FavoriteFoodCreateInput {
        id: ID
        food_id: String!
        custom: Boolean!
        user_id: String!
        user: UserCreateOneWithoutFavoritesInput!
      }

      input FavoriteFoodCreateManyWithoutUserInput {
        create: [FavoriteFoodCreateWithoutUserInput!]
        connect: [FavoriteFoodWhereUniqueInput!]
      }

      input FavoriteFoodCreateWithoutUserInput {
        id: ID
        food_id: String!
        custom: Boolean!
        user_id: String!
      }

      type FavoriteFoodEdge {
        node: FavoriteFood!
        cursor: String!
      }

      enum FavoriteFoodOrderByInput {
        id_ASC
        id_DESC
        food_id_ASC
        food_id_DESC
        custom_ASC
        custom_DESC
        user_id_ASC
        user_id_DESC
        updatedAt_ASC
        updatedAt_DESC
        createdAt_ASC
        createdAt_DESC
      }

      type FavoriteFoodPreviousValues {
        id: ID!
        food_id: String!
        custom: Boolean!
        user_id: String!
        updatedAt: DateTime!
        createdAt: DateTime!
      }

      input FavoriteFoodScalarWhereInput {
        id: ID
        id_not: ID
        id_in: [ID!]
        id_not_in: [ID!]
        id_lt: ID
        id_lte: ID
        id_gt: ID
        id_gte: ID
        id_contains: ID
        id_not_contains: ID
        id_starts_with: ID
        id_not_starts_with: ID
        id_ends_with: ID
        id_not_ends_with: ID
        food_id: String
        food_id_not: String
        food_id_in: [String!]
        food_id_not_in: [String!]
        food_id_lt: String
        food_id_lte: String
        food_id_gt: String
        food_id_gte: String
        food_id_contains: String
        food_id_not_contains: String
        food_id_starts_with: String
        food_id_not_starts_with: String
        food_id_ends_with: String
        food_id_not_ends_with: String
        custom: Boolean
        custom_not: Boolean
        user_id: String
        user_id_not: String
        user_id_in: [String!]
        user_id_not_in: [String!]
        user_id_lt: String
        user_id_lte: String
        user_id_gt: String
        user_id_gte: String
        user_id_contains: String
        user_id_not_contains: String
        user_id_starts_with: String
        user_id_not_starts_with: String
        user_id_ends_with: String
        user_id_not_ends_with: String
        updatedAt: DateTime
        updatedAt_not: DateTime
        updatedAt_in: [DateTime!]
        updatedAt_not_in: [DateTime!]
        updatedAt_lt: DateTime
        updatedAt_lte: DateTime
        updatedAt_gt: DateTime
        updatedAt_gte: DateTime
        createdAt: DateTime
        createdAt_not: DateTime
        createdAt_in: [DateTime!]
        createdAt_not_in: [DateTime!]
        createdAt_lt: DateTime
        createdAt_lte: DateTime
        createdAt_gt: DateTime
        createdAt_gte: DateTime
        AND: [FavoriteFoodScalarWhereInput!]
        OR: [FavoriteFoodScalarWhereInput!]
        NOT: [FavoriteFoodScalarWhereInput!]
      }

      type FavoriteFoodSubscriptionPayload {
        mutation: MutationType!
        node: FavoriteFood
        updatedFields: [String!]
        previousValues: FavoriteFoodPreviousValues
      }

      input FavoriteFoodSubscriptionWhereInput {
        mutation_in: [MutationType!]
        updatedFields_contains: String
        updatedFields_contains_every: [String!]
        updatedFields_contains_some: [String!]
        node: FavoriteFoodWhereInput
        AND: [FavoriteFoodSubscriptionWhereInput!]
        OR: [FavoriteFoodSubscriptionWhereInput!]
        NOT: [FavoriteFoodSubscriptionWhereInput!]
      }

      input FavoriteFoodUpdateInput {
        food_id: String
        custom: Boolean
        user_id: String
        user: UserUpdateOneRequiredWithoutFavoritesInput
      }

      input FavoriteFoodUpdateManyDataInput {
        food_id: String
        custom: Boolean
        user_id: String
      }

      input FavoriteFoodUpdateManyMutationInput {
        food_id: String
        custom: Boolean
        user_id: String
      }

      input FavoriteFoodUpdateManyWithoutUserInput {
        create: [FavoriteFoodCreateWithoutUserInput!]
        delete: [FavoriteFoodWhereUniqueInput!]
        connect: [FavoriteFoodWhereUniqueInput!]
        set: [FavoriteFoodWhereUniqueInput!]
        disconnect: [FavoriteFoodWhereUniqueInput!]
        update: [FavoriteFoodUpdateWithWhereUniqueWithoutUserInput!]
        upsert: [FavoriteFoodUpsertWithWhereUniqueWithoutUserInput!]
        deleteMany: [FavoriteFoodScalarWhereInput!]
        updateMany: [FavoriteFoodUpdateManyWithWhereNestedInput!]
      }

      input FavoriteFoodUpdateManyWithWhereNestedInput {
        where: FavoriteFoodScalarWhereInput!
        data: FavoriteFoodUpdateManyDataInput!
      }

      input FavoriteFoodUpdateWithoutUserDataInput {
        food_id: String
        custom: Boolean
        user_id: String
      }

      input FavoriteFoodUpdateWithWhereUniqueWithoutUserInput {
        where: FavoriteFoodWhereUniqueInput!
        data: FavoriteFoodUpdateWithoutUserDataInput!
      }

      input FavoriteFoodUpsertWithWhereUniqueWithoutUserInput {
        where: FavoriteFoodWhereUniqueInput!
        update: FavoriteFoodUpdateWithoutUserDataInput!
        create: FavoriteFoodCreateWithoutUserInput!
      }

      input FavoriteFoodWhereInput {
        id: ID
        id_not: ID
        id_in: [ID!]
        id_not_in: [ID!]
        id_lt: ID
        id_lte: ID
        id_gt: ID
        id_gte: ID
        id_contains: ID
        id_not_contains: ID
        id_starts_with: ID
        id_not_starts_with: ID
        id_ends_with: ID
        id_not_ends_with: ID
        food_id: String
        food_id_not: String
        food_id_in: [String!]
        food_id_not_in: [String!]
        food_id_lt: String
        food_id_lte: String
        food_id_gt: String
        food_id_gte: String
        food_id_contains: String
        food_id_not_contains: String
        food_id_starts_with: String
        food_id_not_starts_with: String
        food_id_ends_with: String
        food_id_not_ends_with: String
        custom: Boolean
        custom_not: Boolean
        user_id: String
        user_id_not: String
        user_id_in: [String!]
        user_id_not_in: [String!]
        user_id_lt: String
        user_id_lte: String
        user_id_gt: String
        user_id_gte: String
        user_id_contains: String
        user_id_not_contains: String
        user_id_starts_with: String
        user_id_not_starts_with: String
        user_id_ends_with: String
        user_id_not_ends_with: String
        user: UserWhereInput
        updatedAt: DateTime
        updatedAt_not: DateTime
        updatedAt_in: [DateTime!]
        updatedAt_not_in: [DateTime!]
        updatedAt_lt: DateTime
        updatedAt_lte: DateTime
        updatedAt_gt: DateTime
        updatedAt_gte: DateTime
        createdAt: DateTime
        createdAt_not: DateTime
        createdAt_in: [DateTime!]
        createdAt_not_in: [DateTime!]
        createdAt_lt: DateTime
        createdAt_lte: DateTime
        createdAt_gt: DateTime
        createdAt_gte: DateTime
        AND: [FavoriteFoodWhereInput!]
        OR: [FavoriteFoodWhereInput!]
        NOT: [FavoriteFoodWhereInput!]
      }

      input FavoriteFoodWhereUniqueInput {
        id: ID
      }

      type IngredientList {
        id: ID!
        user_id: String!
        recipe_id: String!
        ingredient_id: String!
        custom: Boolean!
        amount: Float!
        unit: String!
        recipe: CustomRecipe!
        user: User!
        updatedAt: DateTime!
        createdAt: DateTime!
      }

      type IngredientListConnection {
        pageInfo: PageInfo!
        edges: [IngredientListEdge]!
        aggregate: AggregateIngredientList!
      }

      input IngredientListCreateInput {
        id: ID
        user_id: String!
        recipe_id: String!
        ingredient_id: String!
        custom: Boolean!
        amount: Float!
        unit: String!
        recipe: CustomRecipeCreateOneWithoutIngredient_listInput!
        user: UserCreateOneWithoutIngredient_listInput!
      }

      input IngredientListCreateManyWithoutRecipeInput {
        create: [IngredientListCreateWithoutRecipeInput!]
        connect: [IngredientListWhereUniqueInput!]
      }

      input IngredientListCreateManyWithoutUserInput {
        create: [IngredientListCreateWithoutUserInput!]
        connect: [IngredientListWhereUniqueInput!]
      }

      input IngredientListCreateWithoutRecipeInput {
        id: ID
        user_id: String!
        recipe_id: String!
        ingredient_id: String!
        custom: Boolean!
        amount: Float!
        unit: String!
        user: UserCreateOneWithoutIngredient_listInput!
      }

      input IngredientListCreateWithoutUserInput {
        id: ID
        user_id: String!
        recipe_id: String!
        ingredient_id: String!
        custom: Boolean!
        amount: Float!
        unit: String!
        recipe: CustomRecipeCreateOneWithoutIngredient_listInput!
      }

      type IngredientListEdge {
        node: IngredientList!
        cursor: String!
      }

      enum IngredientListOrderByInput {
        id_ASC
        id_DESC
        user_id_ASC
        user_id_DESC
        recipe_id_ASC
        recipe_id_DESC
        ingredient_id_ASC
        ingredient_id_DESC
        custom_ASC
        custom_DESC
        amount_ASC
        amount_DESC
        unit_ASC
        unit_DESC
        updatedAt_ASC
        updatedAt_DESC
        createdAt_ASC
        createdAt_DESC
      }

      type IngredientListPreviousValues {
        id: ID!
        user_id: String!
        recipe_id: String!
        ingredient_id: String!
        custom: Boolean!
        amount: Float!
        unit: String!
        updatedAt: DateTime!
        createdAt: DateTime!
      }

      input IngredientListScalarWhereInput {
        id: ID
        id_not: ID
        id_in: [ID!]
        id_not_in: [ID!]
        id_lt: ID
        id_lte: ID
        id_gt: ID
        id_gte: ID
        id_contains: ID
        id_not_contains: ID
        id_starts_with: ID
        id_not_starts_with: ID
        id_ends_with: ID
        id_not_ends_with: ID
        user_id: String
        user_id_not: String
        user_id_in: [String!]
        user_id_not_in: [String!]
        user_id_lt: String
        user_id_lte: String
        user_id_gt: String
        user_id_gte: String
        user_id_contains: String
        user_id_not_contains: String
        user_id_starts_with: String
        user_id_not_starts_with: String
        user_id_ends_with: String
        user_id_not_ends_with: String
        recipe_id: String
        recipe_id_not: String
        recipe_id_in: [String!]
        recipe_id_not_in: [String!]
        recipe_id_lt: String
        recipe_id_lte: String
        recipe_id_gt: String
        recipe_id_gte: String
        recipe_id_contains: String
        recipe_id_not_contains: String
        recipe_id_starts_with: String
        recipe_id_not_starts_with: String
        recipe_id_ends_with: String
        recipe_id_not_ends_with: String
        ingredient_id: String
        ingredient_id_not: String
        ingredient_id_in: [String!]
        ingredient_id_not_in: [String!]
        ingredient_id_lt: String
        ingredient_id_lte: String
        ingredient_id_gt: String
        ingredient_id_gte: String
        ingredient_id_contains: String
        ingredient_id_not_contains: String
        ingredient_id_starts_with: String
        ingredient_id_not_starts_with: String
        ingredient_id_ends_with: String
        ingredient_id_not_ends_with: String
        custom: Boolean
        custom_not: Boolean
        amount: Float
        amount_not: Float
        amount_in: [Float!]
        amount_not_in: [Float!]
        amount_lt: Float
        amount_lte: Float
        amount_gt: Float
        amount_gte: Float
        unit: String
        unit_not: String
        unit_in: [String!]
        unit_not_in: [String!]
        unit_lt: String
        unit_lte: String
        unit_gt: String
        unit_gte: String
        unit_contains: String
        unit_not_contains: String
        unit_starts_with: String
        unit_not_starts_with: String
        unit_ends_with: String
        unit_not_ends_with: String
        updatedAt: DateTime
        updatedAt_not: DateTime
        updatedAt_in: [DateTime!]
        updatedAt_not_in: [DateTime!]
        updatedAt_lt: DateTime
        updatedAt_lte: DateTime
        updatedAt_gt: DateTime
        updatedAt_gte: DateTime
        createdAt: DateTime
        createdAt_not: DateTime
        createdAt_in: [DateTime!]
        createdAt_not_in: [DateTime!]
        createdAt_lt: DateTime
        createdAt_lte: DateTime
        createdAt_gt: DateTime
        createdAt_gte: DateTime
        AND: [IngredientListScalarWhereInput!]
        OR: [IngredientListScalarWhereInput!]
        NOT: [IngredientListScalarWhereInput!]
      }

      type IngredientListSubscriptionPayload {
        mutation: MutationType!
        node: IngredientList
        updatedFields: [String!]
        previousValues: IngredientListPreviousValues
      }

      input IngredientListSubscriptionWhereInput {
        mutation_in: [MutationType!]
        updatedFields_contains: String
        updatedFields_contains_every: [String!]
        updatedFields_contains_some: [String!]
        node: IngredientListWhereInput
        AND: [IngredientListSubscriptionWhereInput!]
        OR: [IngredientListSubscriptionWhereInput!]
        NOT: [IngredientListSubscriptionWhereInput!]
      }

      input IngredientListUpdateInput {
        user_id: String
        recipe_id: String
        ingredient_id: String
        custom: Boolean
        amount: Float
        unit: String
        recipe: CustomRecipeUpdateOneRequiredWithoutIngredient_listInput
        user: UserUpdateOneRequiredWithoutIngredient_listInput
      }

      input IngredientListUpdateManyDataInput {
        user_id: String
        recipe_id: String
        ingredient_id: String
        custom: Boolean
        amount: Float
        unit: String
      }

      input IngredientListUpdateManyMutationInput {
        user_id: String
        recipe_id: String
        ingredient_id: String
        custom: Boolean
        amount: Float
        unit: String
      }

      input IngredientListUpdateManyWithoutRecipeInput {
        create: [IngredientListCreateWithoutRecipeInput!]
        delete: [IngredientListWhereUniqueInput!]
        connect: [IngredientListWhereUniqueInput!]
        set: [IngredientListWhereUniqueInput!]
        disconnect: [IngredientListWhereUniqueInput!]
        update: [IngredientListUpdateWithWhereUniqueWithoutRecipeInput!]
        upsert: [IngredientListUpsertWithWhereUniqueWithoutRecipeInput!]
        deleteMany: [IngredientListScalarWhereInput!]
        updateMany: [IngredientListUpdateManyWithWhereNestedInput!]
      }

      input IngredientListUpdateManyWithoutUserInput {
        create: [IngredientListCreateWithoutUserInput!]
        delete: [IngredientListWhereUniqueInput!]
        connect: [IngredientListWhereUniqueInput!]
        set: [IngredientListWhereUniqueInput!]
        disconnect: [IngredientListWhereUniqueInput!]
        update: [IngredientListUpdateWithWhereUniqueWithoutUserInput!]
        upsert: [IngredientListUpsertWithWhereUniqueWithoutUserInput!]
        deleteMany: [IngredientListScalarWhereInput!]
        updateMany: [IngredientListUpdateManyWithWhereNestedInput!]
      }

      input IngredientListUpdateManyWithWhereNestedInput {
        where: IngredientListScalarWhereInput!
        data: IngredientListUpdateManyDataInput!
      }

      input IngredientListUpdateWithoutRecipeDataInput {
        user_id: String
        recipe_id: String
        ingredient_id: String
        custom: Boolean
        amount: Float
        unit: String
        user: UserUpdateOneRequiredWithoutIngredient_listInput
      }

      input IngredientListUpdateWithoutUserDataInput {
        user_id: String
        recipe_id: String
        ingredient_id: String
        custom: Boolean
        amount: Float
        unit: String
        recipe: CustomRecipeUpdateOneRequiredWithoutIngredient_listInput
      }

      input IngredientListUpdateWithWhereUniqueWithoutRecipeInput {
        where: IngredientListWhereUniqueInput!
        data: IngredientListUpdateWithoutRecipeDataInput!
      }

      input IngredientListUpdateWithWhereUniqueWithoutUserInput {
        where: IngredientListWhereUniqueInput!
        data: IngredientListUpdateWithoutUserDataInput!
      }

      input IngredientListUpsertWithWhereUniqueWithoutRecipeInput {
        where: IngredientListWhereUniqueInput!
        update: IngredientListUpdateWithoutRecipeDataInput!
        create: IngredientListCreateWithoutRecipeInput!
      }

      input IngredientListUpsertWithWhereUniqueWithoutUserInput {
        where: IngredientListWhereUniqueInput!
        update: IngredientListUpdateWithoutUserDataInput!
        create: IngredientListCreateWithoutUserInput!
      }

      input IngredientListWhereInput {
        id: ID
        id_not: ID
        id_in: [ID!]
        id_not_in: [ID!]
        id_lt: ID
        id_lte: ID
        id_gt: ID
        id_gte: ID
        id_contains: ID
        id_not_contains: ID
        id_starts_with: ID
        id_not_starts_with: ID
        id_ends_with: ID
        id_not_ends_with: ID
        user_id: String
        user_id_not: String
        user_id_in: [String!]
        user_id_not_in: [String!]
        user_id_lt: String
        user_id_lte: String
        user_id_gt: String
        user_id_gte: String
        user_id_contains: String
        user_id_not_contains: String
        user_id_starts_with: String
        user_id_not_starts_with: String
        user_id_ends_with: String
        user_id_not_ends_with: String
        recipe_id: String
        recipe_id_not: String
        recipe_id_in: [String!]
        recipe_id_not_in: [String!]
        recipe_id_lt: String
        recipe_id_lte: String
        recipe_id_gt: String
        recipe_id_gte: String
        recipe_id_contains: String
        recipe_id_not_contains: String
        recipe_id_starts_with: String
        recipe_id_not_starts_with: String
        recipe_id_ends_with: String
        recipe_id_not_ends_with: String
        ingredient_id: String
        ingredient_id_not: String
        ingredient_id_in: [String!]
        ingredient_id_not_in: [String!]
        ingredient_id_lt: String
        ingredient_id_lte: String
        ingredient_id_gt: String
        ingredient_id_gte: String
        ingredient_id_contains: String
        ingredient_id_not_contains: String
        ingredient_id_starts_with: String
        ingredient_id_not_starts_with: String
        ingredient_id_ends_with: String
        ingredient_id_not_ends_with: String
        custom: Boolean
        custom_not: Boolean
        amount: Float
        amount_not: Float
        amount_in: [Float!]
        amount_not_in: [Float!]
        amount_lt: Float
        amount_lte: Float
        amount_gt: Float
        amount_gte: Float
        unit: String
        unit_not: String
        unit_in: [String!]
        unit_not_in: [String!]
        unit_lt: String
        unit_lte: String
        unit_gt: String
        unit_gte: String
        unit_contains: String
        unit_not_contains: String
        unit_starts_with: String
        unit_not_starts_with: String
        unit_ends_with: String
        unit_not_ends_with: String
        recipe: CustomRecipeWhereInput
        user: UserWhereInput
        updatedAt: DateTime
        updatedAt_not: DateTime
        updatedAt_in: [DateTime!]
        updatedAt_not_in: [DateTime!]
        updatedAt_lt: DateTime
        updatedAt_lte: DateTime
        updatedAt_gt: DateTime
        updatedAt_gte: DateTime
        createdAt: DateTime
        createdAt_not: DateTime
        createdAt_in: [DateTime!]
        createdAt_not_in: [DateTime!]
        createdAt_lt: DateTime
        createdAt_lte: DateTime
        createdAt_gt: DateTime
        createdAt_gte: DateTime
        AND: [IngredientListWhereInput!]
        OR: [IngredientListWhereInput!]
        NOT: [IngredientListWhereInput!]
      }

      input IngredientListWhereUniqueInput {
        id: ID
      }

      scalar Long

      type Mutation {
        createComment(data: CommentCreateInput!): Comment!
        updateComment(
          data: CommentUpdateInput!
          where: CommentWhereUniqueInput!
        ): Comment
        updateManyComments(
          data: CommentUpdateManyMutationInput!
          where: CommentWhereInput
        ): BatchPayload!
        upsertComment(
          where: CommentWhereUniqueInput!
          create: CommentCreateInput!
          update: CommentUpdateInput!
        ): Comment!
        deleteComment(where: CommentWhereUniqueInput!): Comment
        deleteManyComments(where: CommentWhereInput): BatchPayload!
        createCustomIngredient(
          data: CustomIngredientCreateInput!
        ): CustomIngredient!
        updateCustomIngredient(
          data: CustomIngredientUpdateInput!
          where: CustomIngredientWhereUniqueInput!
        ): CustomIngredient
        updateManyCustomIngredients(
          data: CustomIngredientUpdateManyMutationInput!
          where: CustomIngredientWhereInput
        ): BatchPayload!
        upsertCustomIngredient(
          where: CustomIngredientWhereUniqueInput!
          create: CustomIngredientCreateInput!
          update: CustomIngredientUpdateInput!
        ): CustomIngredient!
        deleteCustomIngredient(
          where: CustomIngredientWhereUniqueInput!
        ): CustomIngredient
        deleteManyCustomIngredients(
          where: CustomIngredientWhereInput
        ): BatchPayload!
        createCustomRecipe(data: CustomRecipeCreateInput!): CustomRecipe!
        updateCustomRecipe(
          data: CustomRecipeUpdateInput!
          where: CustomRecipeWhereUniqueInput!
        ): CustomRecipe
        updateManyCustomRecipes(
          data: CustomRecipeUpdateManyMutationInput!
          where: CustomRecipeWhereInput
        ): BatchPayload!
        upsertCustomRecipe(
          where: CustomRecipeWhereUniqueInput!
          create: CustomRecipeCreateInput!
          update: CustomRecipeUpdateInput!
        ): CustomRecipe!
        deleteCustomRecipe(where: CustomRecipeWhereUniqueInput!): CustomRecipe
        deleteManyCustomRecipes(where: CustomRecipeWhereInput): BatchPayload!
        createDailyRecord(data: DailyRecordCreateInput!): DailyRecord!
        updateDailyRecord(
          data: DailyRecordUpdateInput!
          where: DailyRecordWhereUniqueInput!
        ): DailyRecord
        updateManyDailyRecords(
          data: DailyRecordUpdateManyMutationInput!
          where: DailyRecordWhereInput
        ): BatchPayload!
        upsertDailyRecord(
          where: DailyRecordWhereUniqueInput!
          create: DailyRecordCreateInput!
          update: DailyRecordUpdateInput!
        ): DailyRecord!
        deleteDailyRecord(where: DailyRecordWhereUniqueInput!): DailyRecord
        deleteManyDailyRecords(where: DailyRecordWhereInput): BatchPayload!
        createFavoriteFood(data: FavoriteFoodCreateInput!): FavoriteFood!
        updateFavoriteFood(
          data: FavoriteFoodUpdateInput!
          where: FavoriteFoodWhereUniqueInput!
        ): FavoriteFood
        updateManyFavoriteFoods(
          data: FavoriteFoodUpdateManyMutationInput!
          where: FavoriteFoodWhereInput
        ): BatchPayload!
        upsertFavoriteFood(
          where: FavoriteFoodWhereUniqueInput!
          create: FavoriteFoodCreateInput!
          update: FavoriteFoodUpdateInput!
        ): FavoriteFood!
        deleteFavoriteFood(where: FavoriteFoodWhereUniqueInput!): FavoriteFood
        deleteManyFavoriteFoods(where: FavoriteFoodWhereInput): BatchPayload!
        createIngredientList(data: IngredientListCreateInput!): IngredientList!
        updateIngredientList(
          data: IngredientListUpdateInput!
          where: IngredientListWhereUniqueInput!
        ): IngredientList
        updateManyIngredientLists(
          data: IngredientListUpdateManyMutationInput!
          where: IngredientListWhereInput
        ): BatchPayload!
        upsertIngredientList(
          where: IngredientListWhereUniqueInput!
          create: IngredientListCreateInput!
          update: IngredientListUpdateInput!
        ): IngredientList!
        deleteIngredientList(
          where: IngredientListWhereUniqueInput!
        ): IngredientList
        deleteManyIngredientLists(
          where: IngredientListWhereInput
        ): BatchPayload!
        createPost(data: PostCreateInput!): Post!
        updatePost(data: PostUpdateInput!, where: PostWhereUniqueInput!): Post
        updateManyPosts(
          data: PostUpdateManyMutationInput!
          where: PostWhereInput
        ): BatchPayload!
        upsertPost(
          where: PostWhereUniqueInput!
          create: PostCreateInput!
          update: PostUpdateInput!
        ): Post!
        deletePost(where: PostWhereUniqueInput!): Post
        deleteManyPosts(where: PostWhereInput): BatchPayload!
        createProfile(data: ProfileCreateInput!): Profile!
        updateProfile(
          data: ProfileUpdateInput!
          where: ProfileWhereUniqueInput!
        ): Profile
        updateManyProfiles(
          data: ProfileUpdateManyMutationInput!
          where: ProfileWhereInput
        ): BatchPayload!
        upsertProfile(
          where: ProfileWhereUniqueInput!
          create: ProfileCreateInput!
          update: ProfileUpdateInput!
        ): Profile!
        deleteProfile(where: ProfileWhereUniqueInput!): Profile
        deleteManyProfiles(where: ProfileWhereInput): BatchPayload!
        createUser(data: UserCreateInput!): User!
        updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
        updateManyUsers(
          data: UserUpdateManyMutationInput!
          where: UserWhereInput
        ): BatchPayload!
        upsertUser(
          where: UserWhereUniqueInput!
          create: UserCreateInput!
          update: UserUpdateInput!
        ): User!
        deleteUser(where: UserWhereUniqueInput!): User
        deleteManyUsers(where: UserWhereInput): BatchPayload!
        createWeightLog(data: WeightLogCreateInput!): WeightLog!
        updateWeightLog(
          data: WeightLogUpdateInput!
          where: WeightLogWhereUniqueInput!
        ): WeightLog
        updateManyWeightLogs(
          data: WeightLogUpdateManyMutationInput!
          where: WeightLogWhereInput
        ): BatchPayload!
        upsertWeightLog(
          where: WeightLogWhereUniqueInput!
          create: WeightLogCreateInput!
          update: WeightLogUpdateInput!
        ): WeightLog!
        deleteWeightLog(where: WeightLogWhereUniqueInput!): WeightLog
        deleteManyWeightLogs(where: WeightLogWhereInput): BatchPayload!
      }

      enum MutationType {
        CREATED
        UPDATED
        DELETED
      }

      interface Node {
        id: ID!
      }

      type PageInfo {
        hasNextPage: Boolean!
        hasPreviousPage: Boolean!
        startCursor: String
        endCursor: String
      }

      type Post {
        id: ID!
        user: User!
        user_id: String!
        viewCount: Int
        likeCount: Int
        title: String!
        body: String!
        comments(
          where: CommentWhereInput
          orderBy: CommentOrderByInput
          skip: Int
          after: String
          before: String
          first: Int
          last: Int
        ): [Comment!]
        updatedAt: DateTime!
        createdAt: DateTime!
      }

      type PostConnection {
        pageInfo: PageInfo!
        edges: [PostEdge]!
        aggregate: AggregatePost!
      }

      input PostCreateInput {
        id: ID
        user: UserCreateOneWithoutPostsInput!
        user_id: String!
        viewCount: Int
        likeCount: Int
        title: String!
        body: String!
        comments: CommentCreateManyWithoutPostInput
      }

      input PostCreateManyWithoutUserInput {
        create: [PostCreateWithoutUserInput!]
        connect: [PostWhereUniqueInput!]
      }

      input PostCreateOneWithoutCommentsInput {
        create: PostCreateWithoutCommentsInput
        connect: PostWhereUniqueInput
      }

      input PostCreateWithoutCommentsInput {
        id: ID
        user: UserCreateOneWithoutPostsInput!
        user_id: String!
        viewCount: Int
        likeCount: Int
        title: String!
        body: String!
      }

      input PostCreateWithoutUserInput {
        id: ID
        user_id: String!
        viewCount: Int
        likeCount: Int
        title: String!
        body: String!
        comments: CommentCreateManyWithoutPostInput
      }

      type PostEdge {
        node: Post!
        cursor: String!
      }

      enum PostOrderByInput {
        id_ASC
        id_DESC
        user_id_ASC
        user_id_DESC
        viewCount_ASC
        viewCount_DESC
        likeCount_ASC
        likeCount_DESC
        title_ASC
        title_DESC
        body_ASC
        body_DESC
        updatedAt_ASC
        updatedAt_DESC
        createdAt_ASC
        createdAt_DESC
      }

      type PostPreviousValues {
        id: ID!
        user_id: String!
        viewCount: Int
        likeCount: Int
        title: String!
        body: String!
        updatedAt: DateTime!
        createdAt: DateTime!
      }

      input PostScalarWhereInput {
        id: ID
        id_not: ID
        id_in: [ID!]
        id_not_in: [ID!]
        id_lt: ID
        id_lte: ID
        id_gt: ID
        id_gte: ID
        id_contains: ID
        id_not_contains: ID
        id_starts_with: ID
        id_not_starts_with: ID
        id_ends_with: ID
        id_not_ends_with: ID
        user_id: String
        user_id_not: String
        user_id_in: [String!]
        user_id_not_in: [String!]
        user_id_lt: String
        user_id_lte: String
        user_id_gt: String
        user_id_gte: String
        user_id_contains: String
        user_id_not_contains: String
        user_id_starts_with: String
        user_id_not_starts_with: String
        user_id_ends_with: String
        user_id_not_ends_with: String
        viewCount: Int
        viewCount_not: Int
        viewCount_in: [Int!]
        viewCount_not_in: [Int!]
        viewCount_lt: Int
        viewCount_lte: Int
        viewCount_gt: Int
        viewCount_gte: Int
        likeCount: Int
        likeCount_not: Int
        likeCount_in: [Int!]
        likeCount_not_in: [Int!]
        likeCount_lt: Int
        likeCount_lte: Int
        likeCount_gt: Int
        likeCount_gte: Int
        title: String
        title_not: String
        title_in: [String!]
        title_not_in: [String!]
        title_lt: String
        title_lte: String
        title_gt: String
        title_gte: String
        title_contains: String
        title_not_contains: String
        title_starts_with: String
        title_not_starts_with: String
        title_ends_with: String
        title_not_ends_with: String
        body: String
        body_not: String
        body_in: [String!]
        body_not_in: [String!]
        body_lt: String
        body_lte: String
        body_gt: String
        body_gte: String
        body_contains: String
        body_not_contains: String
        body_starts_with: String
        body_not_starts_with: String
        body_ends_with: String
        body_not_ends_with: String
        updatedAt: DateTime
        updatedAt_not: DateTime
        updatedAt_in: [DateTime!]
        updatedAt_not_in: [DateTime!]
        updatedAt_lt: DateTime
        updatedAt_lte: DateTime
        updatedAt_gt: DateTime
        updatedAt_gte: DateTime
        createdAt: DateTime
        createdAt_not: DateTime
        createdAt_in: [DateTime!]
        createdAt_not_in: [DateTime!]
        createdAt_lt: DateTime
        createdAt_lte: DateTime
        createdAt_gt: DateTime
        createdAt_gte: DateTime
        AND: [PostScalarWhereInput!]
        OR: [PostScalarWhereInput!]
        NOT: [PostScalarWhereInput!]
      }

      type PostSubscriptionPayload {
        mutation: MutationType!
        node: Post
        updatedFields: [String!]
        previousValues: PostPreviousValues
      }

      input PostSubscriptionWhereInput {
        mutation_in: [MutationType!]
        updatedFields_contains: String
        updatedFields_contains_every: [String!]
        updatedFields_contains_some: [String!]
        node: PostWhereInput
        AND: [PostSubscriptionWhereInput!]
        OR: [PostSubscriptionWhereInput!]
        NOT: [PostSubscriptionWhereInput!]
      }

      input PostUpdateInput {
        user: UserUpdateOneRequiredWithoutPostsInput
        user_id: String
        viewCount: Int
        likeCount: Int
        title: String
        body: String
        comments: CommentUpdateManyWithoutPostInput
      }

      input PostUpdateManyDataInput {
        user_id: String
        viewCount: Int
        likeCount: Int
        title: String
        body: String
      }

      input PostUpdateManyMutationInput {
        user_id: String
        viewCount: Int
        likeCount: Int
        title: String
        body: String
      }

      input PostUpdateManyWithoutUserInput {
        create: [PostCreateWithoutUserInput!]
        delete: [PostWhereUniqueInput!]
        connect: [PostWhereUniqueInput!]
        set: [PostWhereUniqueInput!]
        disconnect: [PostWhereUniqueInput!]
        update: [PostUpdateWithWhereUniqueWithoutUserInput!]
        upsert: [PostUpsertWithWhereUniqueWithoutUserInput!]
        deleteMany: [PostScalarWhereInput!]
        updateMany: [PostUpdateManyWithWhereNestedInput!]
      }

      input PostUpdateManyWithWhereNestedInput {
        where: PostScalarWhereInput!
        data: PostUpdateManyDataInput!
      }

      input PostUpdateOneRequiredWithoutCommentsInput {
        create: PostCreateWithoutCommentsInput
        update: PostUpdateWithoutCommentsDataInput
        upsert: PostUpsertWithoutCommentsInput
        connect: PostWhereUniqueInput
      }

      input PostUpdateWithoutCommentsDataInput {
        user: UserUpdateOneRequiredWithoutPostsInput
        user_id: String
        viewCount: Int
        likeCount: Int
        title: String
        body: String
      }

      input PostUpdateWithoutUserDataInput {
        user_id: String
        viewCount: Int
        likeCount: Int
        title: String
        body: String
        comments: CommentUpdateManyWithoutPostInput
      }

      input PostUpdateWithWhereUniqueWithoutUserInput {
        where: PostWhereUniqueInput!
        data: PostUpdateWithoutUserDataInput!
      }

      input PostUpsertWithoutCommentsInput {
        update: PostUpdateWithoutCommentsDataInput!
        create: PostCreateWithoutCommentsInput!
      }

      input PostUpsertWithWhereUniqueWithoutUserInput {
        where: PostWhereUniqueInput!
        update: PostUpdateWithoutUserDataInput!
        create: PostCreateWithoutUserInput!
      }

      input PostWhereInput {
        id: ID
        id_not: ID
        id_in: [ID!]
        id_not_in: [ID!]
        id_lt: ID
        id_lte: ID
        id_gt: ID
        id_gte: ID
        id_contains: ID
        id_not_contains: ID
        id_starts_with: ID
        id_not_starts_with: ID
        id_ends_with: ID
        id_not_ends_with: ID
        user: UserWhereInput
        user_id: String
        user_id_not: String
        user_id_in: [String!]
        user_id_not_in: [String!]
        user_id_lt: String
        user_id_lte: String
        user_id_gt: String
        user_id_gte: String
        user_id_contains: String
        user_id_not_contains: String
        user_id_starts_with: String
        user_id_not_starts_with: String
        user_id_ends_with: String
        user_id_not_ends_with: String
        viewCount: Int
        viewCount_not: Int
        viewCount_in: [Int!]
        viewCount_not_in: [Int!]
        viewCount_lt: Int
        viewCount_lte: Int
        viewCount_gt: Int
        viewCount_gte: Int
        likeCount: Int
        likeCount_not: Int
        likeCount_in: [Int!]
        likeCount_not_in: [Int!]
        likeCount_lt: Int
        likeCount_lte: Int
        likeCount_gt: Int
        likeCount_gte: Int
        title: String
        title_not: String
        title_in: [String!]
        title_not_in: [String!]
        title_lt: String
        title_lte: String
        title_gt: String
        title_gte: String
        title_contains: String
        title_not_contains: String
        title_starts_with: String
        title_not_starts_with: String
        title_ends_with: String
        title_not_ends_with: String
        body: String
        body_not: String
        body_in: [String!]
        body_not_in: [String!]
        body_lt: String
        body_lte: String
        body_gt: String
        body_gte: String
        body_contains: String
        body_not_contains: String
        body_starts_with: String
        body_not_starts_with: String
        body_ends_with: String
        body_not_ends_with: String
        comments_every: CommentWhereInput
        comments_some: CommentWhereInput
        comments_none: CommentWhereInput
        updatedAt: DateTime
        updatedAt_not: DateTime
        updatedAt_in: [DateTime!]
        updatedAt_not_in: [DateTime!]
        updatedAt_lt: DateTime
        updatedAt_lte: DateTime
        updatedAt_gt: DateTime
        updatedAt_gte: DateTime
        createdAt: DateTime
        createdAt_not: DateTime
        createdAt_in: [DateTime!]
        createdAt_not_in: [DateTime!]
        createdAt_lt: DateTime
        createdAt_lte: DateTime
        createdAt_gt: DateTime
        createdAt_gte: DateTime
        AND: [PostWhereInput!]
        OR: [PostWhereInput!]
        NOT: [PostWhereInput!]
      }

      input PostWhereUniqueInput {
        id: ID
      }

      type Profile {
        id: ID!
        user_id: String!
        age: Int!
        weight: Int!
        height: Int!
        gender: Boolean
        goal_weight: Int
        activity_level: Int
        diet: String
        fat: Int
        carbs: Int
        protein: Int
        fiber: Int
        calories: Int
        user: User!
        updatedAt: DateTime!
        createdAt: DateTime!
      }

      type ProfileConnection {
        pageInfo: PageInfo!
        edges: [ProfileEdge]!
        aggregate: AggregateProfile!
      }

      input ProfileCreateInput {
        id: ID
        user_id: String!
        age: Int!
        weight: Int!
        height: Int!
        gender: Boolean
        goal_weight: Int
        activity_level: Int
        diet: String
        fat: Int
        carbs: Int
        protein: Int
        fiber: Int
        calories: Int
        user: UserCreateOneWithoutProfileInput!
      }

      input ProfileCreateOneWithoutUserInput {
        create: ProfileCreateWithoutUserInput
        connect: ProfileWhereUniqueInput
      }

      input ProfileCreateWithoutUserInput {
        id: ID
        user_id: String!
        age: Int!
        weight: Int!
        height: Int!
        gender: Boolean
        goal_weight: Int
        activity_level: Int
        diet: String
        fat: Int
        carbs: Int
        protein: Int
        fiber: Int
        calories: Int
      }

      type ProfileEdge {
        node: Profile!
        cursor: String!
      }

      enum ProfileOrderByInput {
        id_ASC
        id_DESC
        user_id_ASC
        user_id_DESC
        age_ASC
        age_DESC
        weight_ASC
        weight_DESC
        height_ASC
        height_DESC
        gender_ASC
        gender_DESC
        goal_weight_ASC
        goal_weight_DESC
        activity_level_ASC
        activity_level_DESC
        diet_ASC
        diet_DESC
        fat_ASC
        fat_DESC
        carbs_ASC
        carbs_DESC
        protein_ASC
        protein_DESC
        fiber_ASC
        fiber_DESC
        calories_ASC
        calories_DESC
        updatedAt_ASC
        updatedAt_DESC
        createdAt_ASC
        createdAt_DESC
      }

      type ProfilePreviousValues {
        id: ID!
        user_id: String!
        age: Int!
        weight: Int!
        height: Int!
        gender: Boolean
        goal_weight: Int
        activity_level: Int
        diet: String
        fat: Int
        carbs: Int
        protein: Int
        fiber: Int
        calories: Int
        updatedAt: DateTime!
        createdAt: DateTime!
      }

      type ProfileSubscriptionPayload {
        mutation: MutationType!
        node: Profile
        updatedFields: [String!]
        previousValues: ProfilePreviousValues
      }

      input ProfileSubscriptionWhereInput {
        mutation_in: [MutationType!]
        updatedFields_contains: String
        updatedFields_contains_every: [String!]
        updatedFields_contains_some: [String!]
        node: ProfileWhereInput
        AND: [ProfileSubscriptionWhereInput!]
        OR: [ProfileSubscriptionWhereInput!]
        NOT: [ProfileSubscriptionWhereInput!]
      }

      input ProfileUpdateInput {
        user_id: String
        age: Int
        weight: Int
        height: Int
        gender: Boolean
        goal_weight: Int
        activity_level: Int
        diet: String
        fat: Int
        carbs: Int
        protein: Int
        fiber: Int
        calories: Int
        user: UserUpdateOneRequiredWithoutProfileInput
      }

      input ProfileUpdateManyMutationInput {
        user_id: String
        age: Int
        weight: Int
        height: Int
        gender: Boolean
        goal_weight: Int
        activity_level: Int
        diet: String
        fat: Int
        carbs: Int
        protein: Int
        fiber: Int
        calories: Int
      }

      input ProfileUpdateOneWithoutUserInput {
        create: ProfileCreateWithoutUserInput
        update: ProfileUpdateWithoutUserDataInput
        upsert: ProfileUpsertWithoutUserInput
        delete: Boolean
        disconnect: Boolean
        connect: ProfileWhereUniqueInput
      }

      input ProfileUpdateWithoutUserDataInput {
        user_id: String
        age: Int
        weight: Int
        height: Int
        gender: Boolean
        goal_weight: Int
        activity_level: Int
        diet: String
        fat: Int
        carbs: Int
        protein: Int
        fiber: Int
        calories: Int
      }

      input ProfileUpsertWithoutUserInput {
        update: ProfileUpdateWithoutUserDataInput!
        create: ProfileCreateWithoutUserInput!
      }

      input ProfileWhereInput {
        id: ID
        id_not: ID
        id_in: [ID!]
        id_not_in: [ID!]
        id_lt: ID
        id_lte: ID
        id_gt: ID
        id_gte: ID
        id_contains: ID
        id_not_contains: ID
        id_starts_with: ID
        id_not_starts_with: ID
        id_ends_with: ID
        id_not_ends_with: ID
        user_id: String
        user_id_not: String
        user_id_in: [String!]
        user_id_not_in: [String!]
        user_id_lt: String
        user_id_lte: String
        user_id_gt: String
        user_id_gte: String
        user_id_contains: String
        user_id_not_contains: String
        user_id_starts_with: String
        user_id_not_starts_with: String
        user_id_ends_with: String
        user_id_not_ends_with: String
        age: Int
        age_not: Int
        age_in: [Int!]
        age_not_in: [Int!]
        age_lt: Int
        age_lte: Int
        age_gt: Int
        age_gte: Int
        weight: Int
        weight_not: Int
        weight_in: [Int!]
        weight_not_in: [Int!]
        weight_lt: Int
        weight_lte: Int
        weight_gt: Int
        weight_gte: Int
        height: Int
        height_not: Int
        height_in: [Int!]
        height_not_in: [Int!]
        height_lt: Int
        height_lte: Int
        height_gt: Int
        height_gte: Int
        gender: Boolean
        gender_not: Boolean
        goal_weight: Int
        goal_weight_not: Int
        goal_weight_in: [Int!]
        goal_weight_not_in: [Int!]
        goal_weight_lt: Int
        goal_weight_lte: Int
        goal_weight_gt: Int
        goal_weight_gte: Int
        activity_level: Int
        activity_level_not: Int
        activity_level_in: [Int!]
        activity_level_not_in: [Int!]
        activity_level_lt: Int
        activity_level_lte: Int
        activity_level_gt: Int
        activity_level_gte: Int
        diet: String
        diet_not: String
        diet_in: [String!]
        diet_not_in: [String!]
        diet_lt: String
        diet_lte: String
        diet_gt: String
        diet_gte: String
        diet_contains: String
        diet_not_contains: String
        diet_starts_with: String
        diet_not_starts_with: String
        diet_ends_with: String
        diet_not_ends_with: String
        fat: Int
        fat_not: Int
        fat_in: [Int!]
        fat_not_in: [Int!]
        fat_lt: Int
        fat_lte: Int
        fat_gt: Int
        fat_gte: Int
        carbs: Int
        carbs_not: Int
        carbs_in: [Int!]
        carbs_not_in: [Int!]
        carbs_lt: Int
        carbs_lte: Int
        carbs_gt: Int
        carbs_gte: Int
        protein: Int
        protein_not: Int
        protein_in: [Int!]
        protein_not_in: [Int!]
        protein_lt: Int
        protein_lte: Int
        protein_gt: Int
        protein_gte: Int
        fiber: Int
        fiber_not: Int
        fiber_in: [Int!]
        fiber_not_in: [Int!]
        fiber_lt: Int
        fiber_lte: Int
        fiber_gt: Int
        fiber_gte: Int
        calories: Int
        calories_not: Int
        calories_in: [Int!]
        calories_not_in: [Int!]
        calories_lt: Int
        calories_lte: Int
        calories_gt: Int
        calories_gte: Int
        user: UserWhereInput
        updatedAt: DateTime
        updatedAt_not: DateTime
        updatedAt_in: [DateTime!]
        updatedAt_not_in: [DateTime!]
        updatedAt_lt: DateTime
        updatedAt_lte: DateTime
        updatedAt_gt: DateTime
        updatedAt_gte: DateTime
        createdAt: DateTime
        createdAt_not: DateTime
        createdAt_in: [DateTime!]
        createdAt_not_in: [DateTime!]
        createdAt_lt: DateTime
        createdAt_lte: DateTime
        createdAt_gt: DateTime
        createdAt_gte: DateTime
        AND: [ProfileWhereInput!]
        OR: [ProfileWhereInput!]
        NOT: [ProfileWhereInput!]
      }

      input ProfileWhereUniqueInput {
        id: ID
        user_id: String
      }

      type Query {
        comment(where: CommentWhereUniqueInput!): Comment
        comments(
          where: CommentWhereInput
          orderBy: CommentOrderByInput
          skip: Int
          after: String
          before: String
          first: Int
          last: Int
        ): [Comment]!
        commentsConnection(
          where: CommentWhereInput
          orderBy: CommentOrderByInput
          skip: Int
          after: String
          before: String
          first: Int
          last: Int
        ): CommentConnection!
        customIngredient(
          where: CustomIngredientWhereUniqueInput!
        ): CustomIngredient
        customIngredients(
          where: CustomIngredientWhereInput
          orderBy: CustomIngredientOrderByInput
          skip: Int
          after: String
          before: String
          first: Int
          last: Int
        ): [CustomIngredient]!
        customIngredientsConnection(
          where: CustomIngredientWhereInput
          orderBy: CustomIngredientOrderByInput
          skip: Int
          after: String
          before: String
          first: Int
          last: Int
        ): CustomIngredientConnection!
        customRecipe(where: CustomRecipeWhereUniqueInput!): CustomRecipe
        customRecipes(
          where: CustomRecipeWhereInput
          orderBy: CustomRecipeOrderByInput
          skip: Int
          after: String
          before: String
          first: Int
          last: Int
        ): [CustomRecipe]!
        customRecipesConnection(
          where: CustomRecipeWhereInput
          orderBy: CustomRecipeOrderByInput
          skip: Int
          after: String
          before: String
          first: Int
          last: Int
        ): CustomRecipeConnection!
        dailyRecord(where: DailyRecordWhereUniqueInput!): DailyRecord
        dailyRecords(
          where: DailyRecordWhereInput
          orderBy: DailyRecordOrderByInput
          skip: Int
          after: String
          before: String
          first: Int
          last: Int
        ): [DailyRecord]!
        dailyRecordsConnection(
          where: DailyRecordWhereInput
          orderBy: DailyRecordOrderByInput
          skip: Int
          after: String
          before: String
          first: Int
          last: Int
        ): DailyRecordConnection!
        favoriteFood(where: FavoriteFoodWhereUniqueInput!): FavoriteFood
        favoriteFoods(
          where: FavoriteFoodWhereInput
          orderBy: FavoriteFoodOrderByInput
          skip: Int
          after: String
          before: String
          first: Int
          last: Int
        ): [FavoriteFood]!
        favoriteFoodsConnection(
          where: FavoriteFoodWhereInput
          orderBy: FavoriteFoodOrderByInput
          skip: Int
          after: String
          before: String
          first: Int
          last: Int
        ): FavoriteFoodConnection!
        ingredientList(where: IngredientListWhereUniqueInput!): IngredientList
        ingredientLists(
          where: IngredientListWhereInput
          orderBy: IngredientListOrderByInput
          skip: Int
          after: String
          before: String
          first: Int
          last: Int
        ): [IngredientList]!
        ingredientListsConnection(
          where: IngredientListWhereInput
          orderBy: IngredientListOrderByInput
          skip: Int
          after: String
          before: String
          first: Int
          last: Int
        ): IngredientListConnection!
        post(where: PostWhereUniqueInput!): Post
        posts(
          where: PostWhereInput
          orderBy: PostOrderByInput
          skip: Int
          after: String
          before: String
          first: Int
          last: Int
        ): [Post]!
        postsConnection(
          where: PostWhereInput
          orderBy: PostOrderByInput
          skip: Int
          after: String
          before: String
          first: Int
          last: Int
        ): PostConnection!
        profile(where: ProfileWhereUniqueInput!): Profile
        profiles(
          where: ProfileWhereInput
          orderBy: ProfileOrderByInput
          skip: Int
          after: String
          before: String
          first: Int
          last: Int
        ): [Profile]!
        profilesConnection(
          where: ProfileWhereInput
          orderBy: ProfileOrderByInput
          skip: Int
          after: String
          before: String
          first: Int
          last: Int
        ): ProfileConnection!
        user(where: UserWhereUniqueInput!): User
        users(
          where: UserWhereInput
          orderBy: UserOrderByInput
          skip: Int
          after: String
          before: String
          first: Int
          last: Int
        ): [User]!
        usersConnection(
          where: UserWhereInput
          orderBy: UserOrderByInput
          skip: Int
          after: String
          before: String
          first: Int
          last: Int
        ): UserConnection!
        weightLog(where: WeightLogWhereUniqueInput!): WeightLog
        weightLogs(
          where: WeightLogWhereInput
          orderBy: WeightLogOrderByInput
          skip: Int
          after: String
          before: String
          first: Int
          last: Int
        ): [WeightLog]!
        weightLogsConnection(
          where: WeightLogWhereInput
          orderBy: WeightLogOrderByInput
          skip: Int
          after: String
          before: String
          first: Int
          last: Int
        ): WeightLogConnection!
        node(id: ID!): Node
      }

      type Subscription {
        comment(
          where: CommentSubscriptionWhereInput
        ): CommentSubscriptionPayload
        customIngredient(
          where: CustomIngredientSubscriptionWhereInput
        ): CustomIngredientSubscriptionPayload
        customRecipe(
          where: CustomRecipeSubscriptionWhereInput
        ): CustomRecipeSubscriptionPayload
        dailyRecord(
          where: DailyRecordSubscriptionWhereInput
        ): DailyRecordSubscriptionPayload
        favoriteFood(
          where: FavoriteFoodSubscriptionWhereInput
        ): FavoriteFoodSubscriptionPayload
        ingredientList(
          where: IngredientListSubscriptionWhereInput
        ): IngredientListSubscriptionPayload
        post(where: PostSubscriptionWhereInput): PostSubscriptionPayload
        profile(
          where: ProfileSubscriptionWhereInput
        ): ProfileSubscriptionPayload
        user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
        weightLog(
          where: WeightLogSubscriptionWhereInput
        ): WeightLogSubscriptionPayload
      }

      type User {
        id: ID!
        name: String!
        email: String!
        password: String!
        updatedAt: DateTime!
        createdAt: DateTime!
        profile: Profile
        daily_records(
          where: DailyRecordWhereInput
          orderBy: DailyRecordOrderByInput
          skip: Int
          after: String
          before: String
          first: Int
          last: Int
        ): [DailyRecord!]
        custom_recipes(
          where: CustomRecipeWhereInput
          orderBy: CustomRecipeOrderByInput
          skip: Int
          after: String
          before: String
          first: Int
          last: Int
        ): [CustomRecipe!]
        custom_ingredients(
          where: CustomIngredientWhereInput
          orderBy: CustomIngredientOrderByInput
          skip: Int
          after: String
          before: String
          first: Int
          last: Int
        ): [CustomIngredient!]
        ingredient_list(
          where: IngredientListWhereInput
          orderBy: IngredientListOrderByInput
          skip: Int
          after: String
          before: String
          first: Int
          last: Int
        ): [IngredientList!]
        favorites(
          where: FavoriteFoodWhereInput
          orderBy: FavoriteFoodOrderByInput
          skip: Int
          after: String
          before: String
          first: Int
          last: Int
        ): [FavoriteFood!]
        weight_logs(
          where: WeightLogWhereInput
          orderBy: WeightLogOrderByInput
          skip: Int
          after: String
          before: String
          first: Int
          last: Int
        ): [WeightLog!]
        posts(
          where: PostWhereInput
          orderBy: PostOrderByInput
          skip: Int
          after: String
          before: String
          first: Int
          last: Int
        ): [Post!]
        comments(
          where: CommentWhereInput
          orderBy: CommentOrderByInput
          skip: Int
          after: String
          before: String
          first: Int
          last: Int
        ): [Comment!]
      }

      type UserConnection {
        pageInfo: PageInfo!
        edges: [UserEdge]!
        aggregate: AggregateUser!
      }

      input UserCreateInput {
        id: ID
        name: String!
        email: String!
        password: String!
        profile: ProfileCreateOneWithoutUserInput
        daily_records: DailyRecordCreateManyWithoutUserInput
        custom_recipes: CustomRecipeCreateManyWithoutUserInput
        custom_ingredients: CustomIngredientCreateManyWithoutUserInput
        ingredient_list: IngredientListCreateManyWithoutUserInput
        favorites: FavoriteFoodCreateManyWithoutUserInput
        weight_logs: WeightLogCreateManyWithoutUserInput
        posts: PostCreateManyWithoutUserInput
        comments: CommentCreateManyWithoutUserInput
      }

      input UserCreateOneWithoutCommentsInput {
        create: UserCreateWithoutCommentsInput
        connect: UserWhereUniqueInput
      }

      input UserCreateOneWithoutCustom_ingredientsInput {
        create: UserCreateWithoutCustom_ingredientsInput
        connect: UserWhereUniqueInput
      }

      input UserCreateOneWithoutCustom_recipesInput {
        create: UserCreateWithoutCustom_recipesInput
        connect: UserWhereUniqueInput
      }

      input UserCreateOneWithoutDaily_recordsInput {
        create: UserCreateWithoutDaily_recordsInput
        connect: UserWhereUniqueInput
      }

      input UserCreateOneWithoutFavoritesInput {
        create: UserCreateWithoutFavoritesInput
        connect: UserWhereUniqueInput
      }

      input UserCreateOneWithoutIngredient_listInput {
        create: UserCreateWithoutIngredient_listInput
        connect: UserWhereUniqueInput
      }

      input UserCreateOneWithoutPostsInput {
        create: UserCreateWithoutPostsInput
        connect: UserWhereUniqueInput
      }

      input UserCreateOneWithoutProfileInput {
        create: UserCreateWithoutProfileInput
        connect: UserWhereUniqueInput
      }

      input UserCreateOneWithoutWeight_logsInput {
        create: UserCreateWithoutWeight_logsInput
        connect: UserWhereUniqueInput
      }

      input UserCreateWithoutCommentsInput {
        id: ID
        name: String!
        email: String!
        password: String!
        profile: ProfileCreateOneWithoutUserInput
        daily_records: DailyRecordCreateManyWithoutUserInput
        custom_recipes: CustomRecipeCreateManyWithoutUserInput
        custom_ingredients: CustomIngredientCreateManyWithoutUserInput
        ingredient_list: IngredientListCreateManyWithoutUserInput
        favorites: FavoriteFoodCreateManyWithoutUserInput
        weight_logs: WeightLogCreateManyWithoutUserInput
        posts: PostCreateManyWithoutUserInput
      }

      input UserCreateWithoutCustom_ingredientsInput {
        id: ID
        name: String!
        email: String!
        password: String!
        profile: ProfileCreateOneWithoutUserInput
        daily_records: DailyRecordCreateManyWithoutUserInput
        custom_recipes: CustomRecipeCreateManyWithoutUserInput
        ingredient_list: IngredientListCreateManyWithoutUserInput
        favorites: FavoriteFoodCreateManyWithoutUserInput
        weight_logs: WeightLogCreateManyWithoutUserInput
        posts: PostCreateManyWithoutUserInput
        comments: CommentCreateManyWithoutUserInput
      }

      input UserCreateWithoutCustom_recipesInput {
        id: ID
        name: String!
        email: String!
        password: String!
        profile: ProfileCreateOneWithoutUserInput
        daily_records: DailyRecordCreateManyWithoutUserInput
        custom_ingredients: CustomIngredientCreateManyWithoutUserInput
        ingredient_list: IngredientListCreateManyWithoutUserInput
        favorites: FavoriteFoodCreateManyWithoutUserInput
        weight_logs: WeightLogCreateManyWithoutUserInput
        posts: PostCreateManyWithoutUserInput
        comments: CommentCreateManyWithoutUserInput
      }

      input UserCreateWithoutDaily_recordsInput {
        id: ID
        name: String!
        email: String!
        password: String!
        profile: ProfileCreateOneWithoutUserInput
        custom_recipes: CustomRecipeCreateManyWithoutUserInput
        custom_ingredients: CustomIngredientCreateManyWithoutUserInput
        ingredient_list: IngredientListCreateManyWithoutUserInput
        favorites: FavoriteFoodCreateManyWithoutUserInput
        weight_logs: WeightLogCreateManyWithoutUserInput
        posts: PostCreateManyWithoutUserInput
        comments: CommentCreateManyWithoutUserInput
      }

      input UserCreateWithoutFavoritesInput {
        id: ID
        name: String!
        email: String!
        password: String!
        profile: ProfileCreateOneWithoutUserInput
        daily_records: DailyRecordCreateManyWithoutUserInput
        custom_recipes: CustomRecipeCreateManyWithoutUserInput
        custom_ingredients: CustomIngredientCreateManyWithoutUserInput
        ingredient_list: IngredientListCreateManyWithoutUserInput
        weight_logs: WeightLogCreateManyWithoutUserInput
        posts: PostCreateManyWithoutUserInput
        comments: CommentCreateManyWithoutUserInput
      }

      input UserCreateWithoutIngredient_listInput {
        id: ID
        name: String!
        email: String!
        password: String!
        profile: ProfileCreateOneWithoutUserInput
        daily_records: DailyRecordCreateManyWithoutUserInput
        custom_recipes: CustomRecipeCreateManyWithoutUserInput
        custom_ingredients: CustomIngredientCreateManyWithoutUserInput
        favorites: FavoriteFoodCreateManyWithoutUserInput
        weight_logs: WeightLogCreateManyWithoutUserInput
        posts: PostCreateManyWithoutUserInput
        comments: CommentCreateManyWithoutUserInput
      }

      input UserCreateWithoutPostsInput {
        id: ID
        name: String!
        email: String!
        password: String!
        profile: ProfileCreateOneWithoutUserInput
        daily_records: DailyRecordCreateManyWithoutUserInput
        custom_recipes: CustomRecipeCreateManyWithoutUserInput
        custom_ingredients: CustomIngredientCreateManyWithoutUserInput
        ingredient_list: IngredientListCreateManyWithoutUserInput
        favorites: FavoriteFoodCreateManyWithoutUserInput
        weight_logs: WeightLogCreateManyWithoutUserInput
        comments: CommentCreateManyWithoutUserInput
      }

      input UserCreateWithoutProfileInput {
        id: ID
        name: String!
        email: String!
        password: String!
        daily_records: DailyRecordCreateManyWithoutUserInput
        custom_recipes: CustomRecipeCreateManyWithoutUserInput
        custom_ingredients: CustomIngredientCreateManyWithoutUserInput
        ingredient_list: IngredientListCreateManyWithoutUserInput
        favorites: FavoriteFoodCreateManyWithoutUserInput
        weight_logs: WeightLogCreateManyWithoutUserInput
        posts: PostCreateManyWithoutUserInput
        comments: CommentCreateManyWithoutUserInput
      }

      input UserCreateWithoutWeight_logsInput {
        id: ID
        name: String!
        email: String!
        password: String!
        profile: ProfileCreateOneWithoutUserInput
        daily_records: DailyRecordCreateManyWithoutUserInput
        custom_recipes: CustomRecipeCreateManyWithoutUserInput
        custom_ingredients: CustomIngredientCreateManyWithoutUserInput
        ingredient_list: IngredientListCreateManyWithoutUserInput
        favorites: FavoriteFoodCreateManyWithoutUserInput
        posts: PostCreateManyWithoutUserInput
        comments: CommentCreateManyWithoutUserInput
      }

      type UserEdge {
        node: User!
        cursor: String!
      }

      enum UserOrderByInput {
        id_ASC
        id_DESC
        name_ASC
        name_DESC
        email_ASC
        email_DESC
        password_ASC
        password_DESC
        updatedAt_ASC
        updatedAt_DESC
        createdAt_ASC
        createdAt_DESC
      }

      type UserPreviousValues {
        id: ID!
        name: String!
        email: String!
        password: String!
        updatedAt: DateTime!
        createdAt: DateTime!
      }

      type UserSubscriptionPayload {
        mutation: MutationType!
        node: User
        updatedFields: [String!]
        previousValues: UserPreviousValues
      }

      input UserSubscriptionWhereInput {
        mutation_in: [MutationType!]
        updatedFields_contains: String
        updatedFields_contains_every: [String!]
        updatedFields_contains_some: [String!]
        node: UserWhereInput
        AND: [UserSubscriptionWhereInput!]
        OR: [UserSubscriptionWhereInput!]
        NOT: [UserSubscriptionWhereInput!]
      }

      input UserUpdateInput {
        name: String
        email: String
        password: String
        profile: ProfileUpdateOneWithoutUserInput
        daily_records: DailyRecordUpdateManyWithoutUserInput
        custom_recipes: CustomRecipeUpdateManyWithoutUserInput
        custom_ingredients: CustomIngredientUpdateManyWithoutUserInput
        ingredient_list: IngredientListUpdateManyWithoutUserInput
        favorites: FavoriteFoodUpdateManyWithoutUserInput
        weight_logs: WeightLogUpdateManyWithoutUserInput
        posts: PostUpdateManyWithoutUserInput
        comments: CommentUpdateManyWithoutUserInput
      }

      input UserUpdateManyMutationInput {
        name: String
        email: String
        password: String
      }

      input UserUpdateOneRequiredWithoutCommentsInput {
        create: UserCreateWithoutCommentsInput
        update: UserUpdateWithoutCommentsDataInput
        upsert: UserUpsertWithoutCommentsInput
        connect: UserWhereUniqueInput
      }

      input UserUpdateOneRequiredWithoutCustom_ingredientsInput {
        create: UserCreateWithoutCustom_ingredientsInput
        update: UserUpdateWithoutCustom_ingredientsDataInput
        upsert: UserUpsertWithoutCustom_ingredientsInput
        connect: UserWhereUniqueInput
      }

      input UserUpdateOneRequiredWithoutCustom_recipesInput {
        create: UserCreateWithoutCustom_recipesInput
        update: UserUpdateWithoutCustom_recipesDataInput
        upsert: UserUpsertWithoutCustom_recipesInput
        connect: UserWhereUniqueInput
      }

      input UserUpdateOneRequiredWithoutDaily_recordsInput {
        create: UserCreateWithoutDaily_recordsInput
        update: UserUpdateWithoutDaily_recordsDataInput
        upsert: UserUpsertWithoutDaily_recordsInput
        connect: UserWhereUniqueInput
      }

      input UserUpdateOneRequiredWithoutFavoritesInput {
        create: UserCreateWithoutFavoritesInput
        update: UserUpdateWithoutFavoritesDataInput
        upsert: UserUpsertWithoutFavoritesInput
        connect: UserWhereUniqueInput
      }

      input UserUpdateOneRequiredWithoutIngredient_listInput {
        create: UserCreateWithoutIngredient_listInput
        update: UserUpdateWithoutIngredient_listDataInput
        upsert: UserUpsertWithoutIngredient_listInput
        connect: UserWhereUniqueInput
      }

      input UserUpdateOneRequiredWithoutPostsInput {
        create: UserCreateWithoutPostsInput
        update: UserUpdateWithoutPostsDataInput
        upsert: UserUpsertWithoutPostsInput
        connect: UserWhereUniqueInput
      }

      input UserUpdateOneRequiredWithoutProfileInput {
        create: UserCreateWithoutProfileInput
        update: UserUpdateWithoutProfileDataInput
        upsert: UserUpsertWithoutProfileInput
        connect: UserWhereUniqueInput
      }

      input UserUpdateOneRequiredWithoutWeight_logsInput {
        create: UserCreateWithoutWeight_logsInput
        update: UserUpdateWithoutWeight_logsDataInput
        upsert: UserUpsertWithoutWeight_logsInput
        connect: UserWhereUniqueInput
      }

      input UserUpdateWithoutCommentsDataInput {
        name: String
        email: String
        password: String
        profile: ProfileUpdateOneWithoutUserInput
        daily_records: DailyRecordUpdateManyWithoutUserInput
        custom_recipes: CustomRecipeUpdateManyWithoutUserInput
        custom_ingredients: CustomIngredientUpdateManyWithoutUserInput
        ingredient_list: IngredientListUpdateManyWithoutUserInput
        favorites: FavoriteFoodUpdateManyWithoutUserInput
        weight_logs: WeightLogUpdateManyWithoutUserInput
        posts: PostUpdateManyWithoutUserInput
      }

      input UserUpdateWithoutCustom_ingredientsDataInput {
        name: String
        email: String
        password: String
        profile: ProfileUpdateOneWithoutUserInput
        daily_records: DailyRecordUpdateManyWithoutUserInput
        custom_recipes: CustomRecipeUpdateManyWithoutUserInput
        ingredient_list: IngredientListUpdateManyWithoutUserInput
        favorites: FavoriteFoodUpdateManyWithoutUserInput
        weight_logs: WeightLogUpdateManyWithoutUserInput
        posts: PostUpdateManyWithoutUserInput
        comments: CommentUpdateManyWithoutUserInput
      }

      input UserUpdateWithoutCustom_recipesDataInput {
        name: String
        email: String
        password: String
        profile: ProfileUpdateOneWithoutUserInput
        daily_records: DailyRecordUpdateManyWithoutUserInput
        custom_ingredients: CustomIngredientUpdateManyWithoutUserInput
        ingredient_list: IngredientListUpdateManyWithoutUserInput
        favorites: FavoriteFoodUpdateManyWithoutUserInput
        weight_logs: WeightLogUpdateManyWithoutUserInput
        posts: PostUpdateManyWithoutUserInput
        comments: CommentUpdateManyWithoutUserInput
      }

      input UserUpdateWithoutDaily_recordsDataInput {
        name: String
        email: String
        password: String
        profile: ProfileUpdateOneWithoutUserInput
        custom_recipes: CustomRecipeUpdateManyWithoutUserInput
        custom_ingredients: CustomIngredientUpdateManyWithoutUserInput
        ingredient_list: IngredientListUpdateManyWithoutUserInput
        favorites: FavoriteFoodUpdateManyWithoutUserInput
        weight_logs: WeightLogUpdateManyWithoutUserInput
        posts: PostUpdateManyWithoutUserInput
        comments: CommentUpdateManyWithoutUserInput
      }

      input UserUpdateWithoutFavoritesDataInput {
        name: String
        email: String
        password: String
        profile: ProfileUpdateOneWithoutUserInput
        daily_records: DailyRecordUpdateManyWithoutUserInput
        custom_recipes: CustomRecipeUpdateManyWithoutUserInput
        custom_ingredients: CustomIngredientUpdateManyWithoutUserInput
        ingredient_list: IngredientListUpdateManyWithoutUserInput
        weight_logs: WeightLogUpdateManyWithoutUserInput
        posts: PostUpdateManyWithoutUserInput
        comments: CommentUpdateManyWithoutUserInput
      }

      input UserUpdateWithoutIngredient_listDataInput {
        name: String
        email: String
        password: String
        profile: ProfileUpdateOneWithoutUserInput
        daily_records: DailyRecordUpdateManyWithoutUserInput
        custom_recipes: CustomRecipeUpdateManyWithoutUserInput
        custom_ingredients: CustomIngredientUpdateManyWithoutUserInput
        favorites: FavoriteFoodUpdateManyWithoutUserInput
        weight_logs: WeightLogUpdateManyWithoutUserInput
        posts: PostUpdateManyWithoutUserInput
        comments: CommentUpdateManyWithoutUserInput
      }

      input UserUpdateWithoutPostsDataInput {
        name: String
        email: String
        password: String
        profile: ProfileUpdateOneWithoutUserInput
        daily_records: DailyRecordUpdateManyWithoutUserInput
        custom_recipes: CustomRecipeUpdateManyWithoutUserInput
        custom_ingredients: CustomIngredientUpdateManyWithoutUserInput
        ingredient_list: IngredientListUpdateManyWithoutUserInput
        favorites: FavoriteFoodUpdateManyWithoutUserInput
        weight_logs: WeightLogUpdateManyWithoutUserInput
        comments: CommentUpdateManyWithoutUserInput
      }

      input UserUpdateWithoutProfileDataInput {
        name: String
        email: String
        password: String
        daily_records: DailyRecordUpdateManyWithoutUserInput
        custom_recipes: CustomRecipeUpdateManyWithoutUserInput
        custom_ingredients: CustomIngredientUpdateManyWithoutUserInput
        ingredient_list: IngredientListUpdateManyWithoutUserInput
        favorites: FavoriteFoodUpdateManyWithoutUserInput
        weight_logs: WeightLogUpdateManyWithoutUserInput
        posts: PostUpdateManyWithoutUserInput
        comments: CommentUpdateManyWithoutUserInput
      }

      input UserUpdateWithoutWeight_logsDataInput {
        name: String
        email: String
        password: String
        profile: ProfileUpdateOneWithoutUserInput
        daily_records: DailyRecordUpdateManyWithoutUserInput
        custom_recipes: CustomRecipeUpdateManyWithoutUserInput
        custom_ingredients: CustomIngredientUpdateManyWithoutUserInput
        ingredient_list: IngredientListUpdateManyWithoutUserInput
        favorites: FavoriteFoodUpdateManyWithoutUserInput
        posts: PostUpdateManyWithoutUserInput
        comments: CommentUpdateManyWithoutUserInput
      }

      input UserUpsertWithoutCommentsInput {
        update: UserUpdateWithoutCommentsDataInput!
        create: UserCreateWithoutCommentsInput!
      }

      input UserUpsertWithoutCustom_ingredientsInput {
        update: UserUpdateWithoutCustom_ingredientsDataInput!
        create: UserCreateWithoutCustom_ingredientsInput!
      }

      input UserUpsertWithoutCustom_recipesInput {
        update: UserUpdateWithoutCustom_recipesDataInput!
        create: UserCreateWithoutCustom_recipesInput!
      }

      input UserUpsertWithoutDaily_recordsInput {
        update: UserUpdateWithoutDaily_recordsDataInput!
        create: UserCreateWithoutDaily_recordsInput!
      }

      input UserUpsertWithoutFavoritesInput {
        update: UserUpdateWithoutFavoritesDataInput!
        create: UserCreateWithoutFavoritesInput!
      }

      input UserUpsertWithoutIngredient_listInput {
        update: UserUpdateWithoutIngredient_listDataInput!
        create: UserCreateWithoutIngredient_listInput!
      }

      input UserUpsertWithoutPostsInput {
        update: UserUpdateWithoutPostsDataInput!
        create: UserCreateWithoutPostsInput!
      }

      input UserUpsertWithoutProfileInput {
        update: UserUpdateWithoutProfileDataInput!
        create: UserCreateWithoutProfileInput!
      }

      input UserUpsertWithoutWeight_logsInput {
        update: UserUpdateWithoutWeight_logsDataInput!
        create: UserCreateWithoutWeight_logsInput!
      }

      input UserWhereInput {
        id: ID
        id_not: ID
        id_in: [ID!]
        id_not_in: [ID!]
        id_lt: ID
        id_lte: ID
        id_gt: ID
        id_gte: ID
        id_contains: ID
        id_not_contains: ID
        id_starts_with: ID
        id_not_starts_with: ID
        id_ends_with: ID
        id_not_ends_with: ID
        name: String
        name_not: String
        name_in: [String!]
        name_not_in: [String!]
        name_lt: String
        name_lte: String
        name_gt: String
        name_gte: String
        name_contains: String
        name_not_contains: String
        name_starts_with: String
        name_not_starts_with: String
        name_ends_with: String
        name_not_ends_with: String
        email: String
        email_not: String
        email_in: [String!]
        email_not_in: [String!]
        email_lt: String
        email_lte: String
        email_gt: String
        email_gte: String
        email_contains: String
        email_not_contains: String
        email_starts_with: String
        email_not_starts_with: String
        email_ends_with: String
        email_not_ends_with: String
        password: String
        password_not: String
        password_in: [String!]
        password_not_in: [String!]
        password_lt: String
        password_lte: String
        password_gt: String
        password_gte: String
        password_contains: String
        password_not_contains: String
        password_starts_with: String
        password_not_starts_with: String
        password_ends_with: String
        password_not_ends_with: String
        updatedAt: DateTime
        updatedAt_not: DateTime
        updatedAt_in: [DateTime!]
        updatedAt_not_in: [DateTime!]
        updatedAt_lt: DateTime
        updatedAt_lte: DateTime
        updatedAt_gt: DateTime
        updatedAt_gte: DateTime
        createdAt: DateTime
        createdAt_not: DateTime
        createdAt_in: [DateTime!]
        createdAt_not_in: [DateTime!]
        createdAt_lt: DateTime
        createdAt_lte: DateTime
        createdAt_gt: DateTime
        createdAt_gte: DateTime
        profile: ProfileWhereInput
        daily_records_every: DailyRecordWhereInput
        daily_records_some: DailyRecordWhereInput
        daily_records_none: DailyRecordWhereInput
        custom_recipes_every: CustomRecipeWhereInput
        custom_recipes_some: CustomRecipeWhereInput
        custom_recipes_none: CustomRecipeWhereInput
        custom_ingredients_every: CustomIngredientWhereInput
        custom_ingredients_some: CustomIngredientWhereInput
        custom_ingredients_none: CustomIngredientWhereInput
        ingredient_list_every: IngredientListWhereInput
        ingredient_list_some: IngredientListWhereInput
        ingredient_list_none: IngredientListWhereInput
        favorites_every: FavoriteFoodWhereInput
        favorites_some: FavoriteFoodWhereInput
        favorites_none: FavoriteFoodWhereInput
        weight_logs_every: WeightLogWhereInput
        weight_logs_some: WeightLogWhereInput
        weight_logs_none: WeightLogWhereInput
        posts_every: PostWhereInput
        posts_some: PostWhereInput
        posts_none: PostWhereInput
        comments_every: CommentWhereInput
        comments_some: CommentWhereInput
        comments_none: CommentWhereInput
        AND: [UserWhereInput!]
        OR: [UserWhereInput!]
        NOT: [UserWhereInput!]
      }

      input UserWhereUniqueInput {
        id: ID
        email: String
      }

      type WeightLog {
        id: ID!
        date: String!
        user_id: String!
        current_weight: Int!
        user: User!
        updatedAt: DateTime!
        createdAt: DateTime!
      }

      type WeightLogConnection {
        pageInfo: PageInfo!
        edges: [WeightLogEdge]!
        aggregate: AggregateWeightLog!
      }

      input WeightLogCreateInput {
        id: ID
        date: String!
        user_id: String!
        current_weight: Int!
        user: UserCreateOneWithoutWeight_logsInput!
      }

      input WeightLogCreateManyWithoutUserInput {
        create: [WeightLogCreateWithoutUserInput!]
        connect: [WeightLogWhereUniqueInput!]
      }

      input WeightLogCreateWithoutUserInput {
        id: ID
        date: String!
        user_id: String!
        current_weight: Int!
      }

      type WeightLogEdge {
        node: WeightLog!
        cursor: String!
      }

      enum WeightLogOrderByInput {
        id_ASC
        id_DESC
        date_ASC
        date_DESC
        user_id_ASC
        user_id_DESC
        current_weight_ASC
        current_weight_DESC
        updatedAt_ASC
        updatedAt_DESC
        createdAt_ASC
        createdAt_DESC
      }

      type WeightLogPreviousValues {
        id: ID!
        date: String!
        user_id: String!
        current_weight: Int!
        updatedAt: DateTime!
        createdAt: DateTime!
      }

      input WeightLogScalarWhereInput {
        id: ID
        id_not: ID
        id_in: [ID!]
        id_not_in: [ID!]
        id_lt: ID
        id_lte: ID
        id_gt: ID
        id_gte: ID
        id_contains: ID
        id_not_contains: ID
        id_starts_with: ID
        id_not_starts_with: ID
        id_ends_with: ID
        id_not_ends_with: ID
        date: String
        date_not: String
        date_in: [String!]
        date_not_in: [String!]
        date_lt: String
        date_lte: String
        date_gt: String
        date_gte: String
        date_contains: String
        date_not_contains: String
        date_starts_with: String
        date_not_starts_with: String
        date_ends_with: String
        date_not_ends_with: String
        user_id: String
        user_id_not: String
        user_id_in: [String!]
        user_id_not_in: [String!]
        user_id_lt: String
        user_id_lte: String
        user_id_gt: String
        user_id_gte: String
        user_id_contains: String
        user_id_not_contains: String
        user_id_starts_with: String
        user_id_not_starts_with: String
        user_id_ends_with: String
        user_id_not_ends_with: String
        current_weight: Int
        current_weight_not: Int
        current_weight_in: [Int!]
        current_weight_not_in: [Int!]
        current_weight_lt: Int
        current_weight_lte: Int
        current_weight_gt: Int
        current_weight_gte: Int
        updatedAt: DateTime
        updatedAt_not: DateTime
        updatedAt_in: [DateTime!]
        updatedAt_not_in: [DateTime!]
        updatedAt_lt: DateTime
        updatedAt_lte: DateTime
        updatedAt_gt: DateTime
        updatedAt_gte: DateTime
        createdAt: DateTime
        createdAt_not: DateTime
        createdAt_in: [DateTime!]
        createdAt_not_in: [DateTime!]
        createdAt_lt: DateTime
        createdAt_lte: DateTime
        createdAt_gt: DateTime
        createdAt_gte: DateTime
        AND: [WeightLogScalarWhereInput!]
        OR: [WeightLogScalarWhereInput!]
        NOT: [WeightLogScalarWhereInput!]
      }

      type WeightLogSubscriptionPayload {
        mutation: MutationType!
        node: WeightLog
        updatedFields: [String!]
        previousValues: WeightLogPreviousValues
      }

      input WeightLogSubscriptionWhereInput {
        mutation_in: [MutationType!]
        updatedFields_contains: String
        updatedFields_contains_every: [String!]
        updatedFields_contains_some: [String!]
        node: WeightLogWhereInput
        AND: [WeightLogSubscriptionWhereInput!]
        OR: [WeightLogSubscriptionWhereInput!]
        NOT: [WeightLogSubscriptionWhereInput!]
      }

      input WeightLogUpdateInput {
        date: String
        user_id: String
        current_weight: Int
        user: UserUpdateOneRequiredWithoutWeight_logsInput
      }

      input WeightLogUpdateManyDataInput {
        date: String
        user_id: String
        current_weight: Int
      }

      input WeightLogUpdateManyMutationInput {
        date: String
        user_id: String
        current_weight: Int
      }

      input WeightLogUpdateManyWithoutUserInput {
        create: [WeightLogCreateWithoutUserInput!]
        delete: [WeightLogWhereUniqueInput!]
        connect: [WeightLogWhereUniqueInput!]
        set: [WeightLogWhereUniqueInput!]
        disconnect: [WeightLogWhereUniqueInput!]
        update: [WeightLogUpdateWithWhereUniqueWithoutUserInput!]
        upsert: [WeightLogUpsertWithWhereUniqueWithoutUserInput!]
        deleteMany: [WeightLogScalarWhereInput!]
        updateMany: [WeightLogUpdateManyWithWhereNestedInput!]
      }

      input WeightLogUpdateManyWithWhereNestedInput {
        where: WeightLogScalarWhereInput!
        data: WeightLogUpdateManyDataInput!
      }

      input WeightLogUpdateWithoutUserDataInput {
        date: String
        user_id: String
        current_weight: Int
      }

      input WeightLogUpdateWithWhereUniqueWithoutUserInput {
        where: WeightLogWhereUniqueInput!
        data: WeightLogUpdateWithoutUserDataInput!
      }

      input WeightLogUpsertWithWhereUniqueWithoutUserInput {
        where: WeightLogWhereUniqueInput!
        update: WeightLogUpdateWithoutUserDataInput!
        create: WeightLogCreateWithoutUserInput!
      }

      input WeightLogWhereInput {
        id: ID
        id_not: ID
        id_in: [ID!]
        id_not_in: [ID!]
        id_lt: ID
        id_lte: ID
        id_gt: ID
        id_gte: ID
        id_contains: ID
        id_not_contains: ID
        id_starts_with: ID
        id_not_starts_with: ID
        id_ends_with: ID
        id_not_ends_with: ID
        date: String
        date_not: String
        date_in: [String!]
        date_not_in: [String!]
        date_lt: String
        date_lte: String
        date_gt: String
        date_gte: String
        date_contains: String
        date_not_contains: String
        date_starts_with: String
        date_not_starts_with: String
        date_ends_with: String
        date_not_ends_with: String
        user_id: String
        user_id_not: String
        user_id_in: [String!]
        user_id_not_in: [String!]
        user_id_lt: String
        user_id_lte: String
        user_id_gt: String
        user_id_gte: String
        user_id_contains: String
        user_id_not_contains: String
        user_id_starts_with: String
        user_id_not_starts_with: String
        user_id_ends_with: String
        user_id_not_ends_with: String
        current_weight: Int
        current_weight_not: Int
        current_weight_in: [Int!]
        current_weight_not_in: [Int!]
        current_weight_lt: Int
        current_weight_lte: Int
        current_weight_gt: Int
        current_weight_gte: Int
        user: UserWhereInput
        updatedAt: DateTime
        updatedAt_not: DateTime
        updatedAt_in: [DateTime!]
        updatedAt_not_in: [DateTime!]
        updatedAt_lt: DateTime
        updatedAt_lte: DateTime
        updatedAt_gt: DateTime
        updatedAt_gte: DateTime
        createdAt: DateTime
        createdAt_not: DateTime
        createdAt_in: [DateTime!]
        createdAt_not_in: [DateTime!]
        createdAt_lt: DateTime
        createdAt_lte: DateTime
        createdAt_gt: DateTime
        createdAt_gte: DateTime
        AND: [WeightLogWhereInput!]
        OR: [WeightLogWhereInput!]
        NOT: [WeightLogWhereInput!]
      }

      input WeightLogWhereUniqueInput {
        id: ID
      }
    `,
};
